
Prefixes:
     xsd: http://www.w3.org/2001/XMLSchema
     ns0: http://www.onvif.org/ver10/device/wsdl
     ns1: http://www.onvif.org/ver10/schema
     ns2: http://www.w3.org/2005/05/xmlmime
     ns3: http://www.w3.org/2003/05/soap-envelope
     ns4: http://www.w3.org/XML/1998/namespace
     ns5: http://docs.oasis-open.org/wsn/b-2
     ns6: http://www.w3.org/2005/08/addressing
     ns7: http://docs.oasis-open.org/wsrf/bf-2
     ns8: http://docs.oasis-open.org/wsn/t-1
     ns9: http://www.w3.org/2004/08/xop/include

Global elements:
     ns5:ConsumerReference(ns6:EndpointReferenceType)
     ns5:CreatePullPoint(_value_1: ANY[], _attr_1: {})
     ns5:CreatePullPointResponse(PullPoint: ns6:EndpointReferenceType, _value_1: ANY[], _attr_1: {})
     ns5:CreationTime(xsd:dateTime)
     ns5:CurrentTime(xsd:dateTime)
     ns5:DestroyPullPoint(_value_1: ANY[], _attr_1: {})
     ns5:DestroyPullPointResponse(_value_1: ANY[], _attr_1: {})
     ns5:Filter(ns5:FilterType)
     ns5:FixedTopicSet(xsd:boolean)
     ns5:GetCurrentMessage(Topic: ns5:TopicExpressionType, _value_1: ANY[])
     ns5:GetCurrentMessageResponse(_value_1: ANY[])
     ns5:GetMessages(MaximumNumber: xsd:nonNegativeInteger, _value_1: ANY[], _attr_1: {})
     ns5:GetMessagesResponse(NotificationMessage: ns5:NotificationMessageHolderType[], _value_1: ANY[], _attr_1: {})
     ns5:InvalidFilterFault(ns5:InvalidFilterFaultType)
     ns5:InvalidMessageContentExpressionFault(ns5:InvalidMessageContentExpressionFaultType)
     ns5:InvalidProducerPropertiesExpressionFault(ns5:InvalidProducerPropertiesExpressionFaultType)
     ns5:InvalidTopicExpressionFault(ns5:InvalidTopicExpressionFaultType)
     ns5:MessageContent(ns5:QueryExpressionType)
     ns5:MultipleTopicsSpecifiedFault(ns5:MultipleTopicsSpecifiedFaultType)
     ns5:NoCurrentMessageOnTopicFault(ns5:NoCurrentMessageOnTopicFaultType)
     ns5:NotificationMessage(ns5:NotificationMessageHolderType)
     ns5:NotificationProducerRP(TopicExpression: ns5:TopicExpressionType[], FixedTopicSet: xsd:boolean, TopicExpressionDialect: xsd:anyURI[], TopicSet: ns8:TopicSetType)
     ns5:Notify(NotificationMessage: ns5:NotificationMessageHolderType[], _value_1: ANY[])
     ns5:NotifyMessageNotSupportedFault(ns5:NotifyMessageNotSupportedFaultType)
     ns5:PauseFailedFault(ns5:PauseFailedFaultType)
     ns5:PauseSubscription(_value_1: ANY[])
     ns5:PauseSubscriptionResponse(_value_1: ANY[])
     ns5:ProducerProperties(ns5:QueryExpressionType)
     ns5:ProducerReference(ns6:EndpointReferenceType)
     ns5:Renew(TerminationTime: , _value_1: ANY[])
     ns5:RenewResponse(TerminationTime: xsd:dateTime, CurrentTime: xsd:dateTime, _value_1: ANY[])
     ns5:ResumeFailedFault(ns5:ResumeFailedFaultType)
     ns5:ResumeSubscription(_value_1: ANY[])
     ns5:ResumeSubscriptionResponse(_value_1: ANY[])
     ns5:Subscribe(ConsumerReference: ns6:EndpointReferenceType, Filter: ns5:FilterType, InitialTerminationTime: , SubscriptionPolicy: {_value_1: ANY[]}, _value_1: ANY[])
     ns5:SubscribeCreationFailedFault(ns5:SubscribeCreationFailedFaultType)
     ns5:SubscribeResponse(SubscriptionReference: ns6:EndpointReferenceType, CurrentTime: xsd:dateTime, TerminationTime: xsd:dateTime, _value_1: ANY[])
     ns5:SubscriptionManagerRP(ConsumerReference: ns6:EndpointReferenceType, Filter: ns5:FilterType, SubscriptionPolicy: ns5:SubscriptionPolicyType, CreationTime: xsd:dateTime)
     ns5:SubscriptionPolicy(ns5:SubscriptionPolicyType)
     ns5:SubscriptionReference(ns6:EndpointReferenceType)
     ns5:TerminationTime(xsd:dateTime)
     ns5:Topic(ns5:TopicExpressionType)
     ns5:TopicExpression(ns5:TopicExpressionType)
     ns5:TopicExpressionDialect(xsd:anyURI)
     ns5:TopicExpressionDialectUnknownFault(ns5:TopicExpressionDialectUnknownFaultType)
     ns5:TopicNotSupportedFault(ns5:TopicNotSupportedFaultType)
     ns5:UnableToCreatePullPointFault(ns5:UnableToCreatePullPointFaultType)
     ns5:UnableToDestroyPullPointFault(ns5:UnableToDestroyPullPointFaultType)
     ns5:UnableToDestroySubscriptionFault(ns5:UnableToDestroySubscriptionFaultType)
     ns5:UnableToGetMessagesFault(ns5:UnableToGetMessagesFaultType)
     ns5:UnacceptableInitialTerminationTimeFault(ns5:UnacceptableInitialTerminationTimeFaultType)
     ns5:UnacceptableTerminationTimeFault(ns5:UnacceptableTerminationTimeFaultType)
     ns5:UnrecognizedPolicyRequestFault(ns5:UnrecognizedPolicyRequestFaultType)
     ns5:Unsubscribe(_value_1: ANY[])
     ns5:UnsubscribeResponse(_value_1: ANY[])
     ns5:UnsupportedPolicyRequestFault(ns5:UnsupportedPolicyRequestFaultType)
     ns5:UseRaw()
     ns8:TopicNamespace(ns8:TopicNamespaceType)
     ns8:TopicSet(ns8:TopicSetType)
     ns7:BaseFault(ns7:BaseFaultType)
     ns0:AddIPAddressFilter(IPAddressFilter: ns1:IPAddressFilter)
     ns0:AddIPAddressFilterResponse()
     ns0:AddScopes(ScopeItem: xsd:anyURI[])
     ns0:AddScopesResponse()
     ns0:Capabilities(ns0:DeviceServiceCapabilities)
     ns0:CreateCertificate(CertificateID: xsd:token, Subject: xsd:string, ValidNotBefore: xsd:dateTime, ValidNotAfter: xsd:dateTime)
     ns0:CreateCertificateResponse(NvtCertificate: ns1:Certificate)
     ns0:CreateDot1XConfiguration(Dot1XConfiguration: ns1:Dot1XConfiguration)
     ns0:CreateDot1XConfigurationResponse()
     ns0:CreateStorageConfiguration(StorageConfiguration: ns0:StorageConfigurationData)
     ns0:CreateStorageConfigurationResponse(Token: ns1:ReferenceToken)
     ns0:CreateUsers(User: ns1:User[])
     ns0:CreateUsersResponse()
     ns0:DeleteCertificates(CertificateID: xsd:token[])
     ns0:DeleteCertificatesResponse()
     ns0:DeleteDot1XConfiguration(Dot1XConfigurationToken: ns1:ReferenceToken[])
     ns0:DeleteDot1XConfigurationResponse()
     ns0:DeleteGeoLocation(Location: ns1:LocationEntity[])
     ns0:DeleteGeoLocationResponse()
     ns0:DeleteStorageConfiguration(Token: ns1:ReferenceToken)
     ns0:DeleteStorageConfigurationResponse()
     ns0:DeleteUsers(Username: xsd:string[])
     ns0:DeleteUsersResponse()
     ns0:GetAccessPolicy()
     ns0:GetAccessPolicyResponse(PolicyFile: ns1:BinaryData)
     ns0:GetAuthFailureWarningConfiguration()
     ns0:GetAuthFailureWarningConfigurationResponse(Enabled: xsd:boolean, MonitorPeriod: xsd:int, MaxAuthFailures: xsd:int)
     ns0:GetAuthFailureWarningOptions()
     ns0:GetAuthFailureWarningOptionsResponse(MonitorPeriodRange: ns1:IntRange, AuthFailureRange: ns1:IntRange)
     ns0:GetCACertificates()
     ns0:GetCACertificatesResponse(CACertificate: ns1:Certificate[])
     ns0:GetCapabilities(Category: ns1:CapabilityCategory[])
     ns0:GetCapabilitiesResponse(Capabilities: ns1:Capabilities)
     ns0:GetCertificateInformation(CertificateID: xsd:token)
     ns0:GetCertificateInformationResponse(CertificateInformation: ns1:CertificateInformation)
     ns0:GetCertificates()
     ns0:GetCertificatesResponse(NvtCertificate: ns1:Certificate[])
     ns0:GetCertificatesStatus()
     ns0:GetCertificatesStatusResponse(CertificateStatus: ns1:CertificateStatus[])
     ns0:GetClientCertificateMode()
     ns0:GetClientCertificateModeResponse(Enabled: xsd:boolean)
     ns0:GetDNS()
     ns0:GetDNSResponse(DNSInformation: ns1:DNSInformation)
     ns0:GetDPAddresses()
     ns0:GetDPAddressesResponse(DPAddress: ns1:NetworkHost[])
     ns0:GetDeviceInformation()
     ns0:GetDeviceInformationResponse(Manufacturer: xsd:string, Model: xsd:string, FirmwareVersion: xsd:string, SerialNumber: xsd:string, HardwareId: xsd:string)
     ns0:GetDiscoveryMode()
     ns0:GetDiscoveryModeResponse(DiscoveryMode: ns1:DiscoveryMode)
     ns0:GetDot11Capabilities(_value_1: ANY[])
     ns0:GetDot11CapabilitiesResponse(Capabilities: ns1:Dot11Capabilities)
     ns0:GetDot11Status(InterfaceToken: ns1:ReferenceToken)
     ns0:GetDot11StatusResponse(Status: ns1:Dot11Status)
     ns0:GetDot1XConfiguration(Dot1XConfigurationToken: ns1:ReferenceToken)
     ns0:GetDot1XConfigurationResponse(Dot1XConfiguration: ns1:Dot1XConfiguration)
     ns0:GetDot1XConfigurations()
     ns0:GetDot1XConfigurationsResponse(Dot1XConfiguration: ns1:Dot1XConfiguration[])
     ns0:GetDynamicDNS()
     ns0:GetDynamicDNSResponse(DynamicDNSInformation: ns1:DynamicDNSInformation)
     ns0:GetEndpointReference()
     ns0:GetEndpointReferenceResponse(GUID: xsd:string, _value_1: ANY[])
     ns0:GetGeoLocation()
     ns0:GetGeoLocationResponse(Location: ns1:LocationEntity[])
     ns0:GetHostname()
     ns0:GetHostnameResponse(HostnameInformation: ns1:HostnameInformation)
     ns0:GetIPAddressFilter()
     ns0:GetIPAddressFilterResponse(IPAddressFilter: ns1:IPAddressFilter)
     ns0:GetNTP()
     ns0:GetNTPResponse(NTPInformation: ns1:NTPInformation)
     ns0:GetNetworkDefaultGateway()
     ns0:GetNetworkDefaultGatewayResponse(NetworkGateway: ns1:NetworkGateway)
     ns0:GetNetworkInterfaces()
     ns0:GetNetworkInterfacesResponse(NetworkInterfaces: ns1:NetworkInterface[])
     ns0:GetNetworkProtocols()
     ns0:GetNetworkProtocolsResponse(NetworkProtocols: ns1:NetworkProtocol[])
     ns0:GetPasswordComplexityConfiguration()
     ns0:GetPasswordComplexityConfigurationResponse(MinLen: xsd:int, Uppercase: xsd:int, Number: xsd:int, SpecialChars: xsd:int, BlockUsernameOccurrence: xsd:boolean, PolicyConfigurationLocked: xsd:boolean)
     ns0:GetPasswordComplexityOptions()
     ns0:GetPasswordComplexityOptionsResponse(MinLenRange: ns1:IntRange, UppercaseRange: ns1:IntRange, NumberRange: ns1:IntRange, SpecialCharsRange: ns1:IntRange, BlockUsernameOccurrenceSupported: xsd:boolean, PolicyConfigurationLockSupported: xsd:boolean)
     ns0:GetPasswordHistoryConfiguration()
     ns0:GetPasswordHistoryConfigurationResponse(Enabled: xsd:boolean, Length: xsd:int)
     ns0:GetPkcs10Request(CertificateID: xsd:token, Subject: xsd:string, Attributes: ns1:BinaryData)
     ns0:GetPkcs10RequestResponse(Pkcs10Request: ns1:BinaryData)
     ns0:GetRelayOutputs()
     ns0:GetRelayOutputsResponse(RelayOutputs: ns1:RelayOutput[])
     ns0:GetRemoteDiscoveryMode()
     ns0:GetRemoteDiscoveryModeResponse(RemoteDiscoveryMode: ns1:DiscoveryMode)
     ns0:GetRemoteUser()
     ns0:GetRemoteUserResponse(RemoteUser: ns1:RemoteUser)
     ns0:GetScopes()
     ns0:GetScopesResponse(Scopes: ns1:Scope[])
     ns0:GetServiceCapabilities()
     ns0:GetServiceCapabilitiesResponse(Capabilities: ns0:DeviceServiceCapabilities)
     ns0:GetServices(IncludeCapability: xsd:boolean)
     ns0:GetServicesResponse(Service: ns0:Service[])
     ns0:GetStorageConfiguration(Token: ns1:ReferenceToken)
     ns0:GetStorageConfigurationResponse(StorageConfiguration: ns0:StorageConfiguration)
     ns0:GetStorageConfigurations()
     ns0:GetStorageConfigurationsResponse(StorageConfigurations: ns0:StorageConfiguration[])
     ns0:GetSystemBackup()
     ns0:GetSystemBackupResponse(BackupFiles: ns1:BackupFile[])
     ns0:GetSystemDateAndTime()
     ns0:GetSystemDateAndTimeResponse(SystemDateAndTime: ns1:SystemDateTime)
     ns0:GetSystemLog(LogType: ns1:SystemLogType)
     ns0:GetSystemLogResponse(SystemLog: ns1:SystemLog)
     ns0:GetSystemSupportInformation()
     ns0:GetSystemSupportInformationResponse(SupportInformation: ns1:SupportInformation)
     ns0:GetSystemUris()
     ns0:GetSystemUrisResponse(SystemLogUris: ns1:SystemLogUriList, SupportInfoUri: xsd:anyURI, SystemBackupUri: xsd:anyURI, Extension: {_value_1: ANY[]})
     ns0:GetUsers()
     ns0:GetUsersResponse(User: ns1:User[])
     ns0:GetWsdlUrl()
     ns0:GetWsdlUrlResponse(WsdlUrl: xsd:anyURI)
     ns0:GetZeroConfiguration()
     ns0:GetZeroConfigurationResponse(ZeroConfiguration: ns1:NetworkZeroConfiguration)
     ns0:LoadCACertificates(CACertificate: ns1:Certificate[])
     ns0:LoadCACertificatesResponse()
     ns0:LoadCertificateWithPrivateKey(CertificateWithPrivateKey: ns1:CertificateWithPrivateKey[])
     ns0:LoadCertificateWithPrivateKeyResponse()
     ns0:LoadCertificates(NVTCertificate: ns1:Certificate[])
     ns0:LoadCertificatesResponse()
     ns0:RemoveIPAddressFilter(IPAddressFilter: ns1:IPAddressFilter)
     ns0:RemoveIPAddressFilterResponse()
     ns0:RemoveScopes(ScopeItem: xsd:anyURI[])
     ns0:RemoveScopesResponse(ScopeItem: xsd:anyURI[])
     ns0:RestoreSystem(BackupFiles: ns1:BackupFile[])
     ns0:RestoreSystemResponse()
     ns0:ScanAvailableDot11Networks(InterfaceToken: ns1:ReferenceToken)
     ns0:ScanAvailableDot11NetworksResponse(Networks: ns1:Dot11AvailableNetworks[])
     ns0:SendAuxiliaryCommand(AuxiliaryCommand: ns1:AuxiliaryData)
     ns0:SendAuxiliaryCommandResponse(AuxiliaryCommandResponse: ns1:AuxiliaryData)
     ns0:SetAccessPolicy(PolicyFile: ns1:BinaryData)
     ns0:SetAccessPolicyResponse()
     ns0:SetAuthFailureWarningConfiguration(Enabled: xsd:boolean, MonitorPeriod: xsd:int, MaxAuthFailures: xsd:int)
     ns0:SetAuthFailureWarningConfigurationResponse()
     ns0:SetCertificatesStatus(CertificateStatus: ns1:CertificateStatus[])
     ns0:SetCertificatesStatusResponse()
     ns0:SetClientCertificateMode(Enabled: xsd:boolean)
     ns0:SetClientCertificateModeResponse()
     ns0:SetDNS(FromDHCP: xsd:boolean, SearchDomain: xsd:token[], DNSManual: ns1:IPAddress[])
     ns0:SetDNSResponse()
     ns0:SetDPAddresses(DPAddress: ns1:NetworkHost[])
     ns0:SetDPAddressesResponse()
     ns0:SetDiscoveryMode(DiscoveryMode: ns1:DiscoveryMode)
     ns0:SetDiscoveryModeResponse()
     ns0:SetDot1XConfiguration(Dot1XConfiguration: ns1:Dot1XConfiguration)
     ns0:SetDot1XConfigurationResponse()
     ns0:SetDynamicDNS(Type: ns1:DynamicDNSType, Name: ns1:DNSName, TTL: xsd:duration)
     ns0:SetDynamicDNSResponse()
     ns0:SetGeoLocation(Location: ns1:LocationEntity[])
     ns0:SetGeoLocationResponse()
     ns0:SetHashingAlgorithm(Algorithm: xsd:string[])
     ns0:SetHashingAlgorithmResponse()
     ns0:SetHostname(Name: xsd:token)
     ns0:SetHostnameFromDHCP(FromDHCP: xsd:boolean)
     ns0:SetHostnameFromDHCPResponse(RebootNeeded: xsd:boolean)
     ns0:SetHostnameResponse()
     ns0:SetIPAddressFilter(IPAddressFilter: ns1:IPAddressFilter)
     ns0:SetIPAddressFilterResponse()
     ns0:SetNTP(FromDHCP: xsd:boolean, NTPManual: ns1:NetworkHost[])
     ns0:SetNTPResponse()
     ns0:SetNetworkDefaultGateway(IPv4Address: ns1:IPv4Address[], IPv6Address: ns1:IPv6Address[])
     ns0:SetNetworkDefaultGatewayResponse()
     ns0:SetNetworkInterfaces(InterfaceToken: ns1:ReferenceToken, NetworkInterface: ns1:NetworkInterfaceSetConfiguration)
     ns0:SetNetworkInterfacesResponse(RebootNeeded: xsd:boolean)
     ns0:SetNetworkProtocols(NetworkProtocols: ns1:NetworkProtocol[])
     ns0:SetNetworkProtocolsResponse()
     ns0:SetPasswordComplexityConfiguration(MinLen: xsd:int, Uppercase: xsd:int, Number: xsd:int, SpecialChars: xsd:int, BlockUsernameOccurrence: xsd:boolean, PolicyConfigurationLocked: xsd:boolean)
     ns0:SetPasswordComplexityConfigurationResponse()
     ns0:SetPasswordHistoryConfiguration(Enabled: xsd:boolean, Length: xsd:int)
     ns0:SetPasswordHistoryConfigurationResponse()
     ns0:SetRelayOutputSettings(RelayOutputToken: ns1:ReferenceToken, Properties: ns1:RelayOutputSettings)
     ns0:SetRelayOutputSettingsResponse()
     ns0:SetRelayOutputState(RelayOutputToken: ns1:ReferenceToken, LogicalState: ns1:RelayLogicalState)
     ns0:SetRelayOutputStateResponse()
     ns0:SetRemoteDiscoveryMode(RemoteDiscoveryMode: ns1:DiscoveryMode)
     ns0:SetRemoteDiscoveryModeResponse()
     ns0:SetRemoteUser(RemoteUser: ns1:RemoteUser)
     ns0:SetRemoteUserResponse()
     ns0:SetScopes(Scopes: xsd:anyURI[])
     ns0:SetScopesResponse()
     ns0:SetStorageConfiguration(StorageConfiguration: ns0:StorageConfiguration)
     ns0:SetStorageConfigurationResponse()
     ns0:SetSystemDateAndTime(DateTimeType: ns1:SetDateTimeType, DaylightSavings: xsd:boolean, TimeZone: ns1:TimeZone, UTCDateTime: ns1:DateTime)
     ns0:SetSystemDateAndTimeResponse()
     ns0:SetSystemFactoryDefault(FactoryDefault: ns1:FactoryDefaultType)
     ns0:SetSystemFactoryDefaultResponse()
     ns0:SetUser(User: ns1:User[])
     ns0:SetUserResponse()
     ns0:SetZeroConfiguration(InterfaceToken: ns1:ReferenceToken, Enabled: xsd:boolean)
     ns0:SetZeroConfigurationResponse()
     ns0:StartFirmwareUpgrade()
     ns0:StartFirmwareUpgradeResponse(UploadUri: xsd:anyURI, UploadDelay: xsd:duration, ExpectedDownTime: xsd:duration)
     ns0:StartSystemRestore()
     ns0:StartSystemRestoreResponse(UploadUri: xsd:anyURI, ExpectedDownTime: xsd:duration)
     ns0:SystemReboot()
     ns0:SystemRebootResponse(Message: xsd:string)
     ns0:UpgradeSystemFirmware(Firmware: ns1:AttachmentData)
     ns0:UpgradeSystemFirmwareResponse(Message: xsd:string)
     ns1:AudioDecoderConfiguration(ns1:AudioDecoderConfiguration)
     ns1:AudioEncoderConfiguration(ns1:AudioEncoderConfiguration)
     ns1:AudioOutputConfiguration(ns1:AudioOutputConfiguration)
     ns1:AudioSourceConfiguration(ns1:AudioSourceConfiguration)
     ns1:DurationRange(ns1:DurationRange)
     ns1:FloatList(xsd:float[])
     ns1:FloatRange(ns1:FloatRange)
     ns1:IntList(xsd:int[])
     ns1:IntRange(ns1:IntRange)
     ns1:IntRectangleRange(ns1:IntRectangleRange)
     ns1:Message(Source: ns1:ItemList, Key: ns1:ItemList, Data: ns1:ItemList, Extension: ns1:MessageExtension, UtcTime: xsd:dateTime, PropertyOperation: ns1:PropertyOperation, _attr_1: {})
     ns1:MetadataConfiguration(ns1:MetadataConfiguration)
     ns1:PTZConfiguration(ns1:PTZConfiguration)
     ns1:Polygon(ns1:Polygon)
     ns1:PolygonOptions(ns1:PolygonOptions)
     ns1:Polyline(ns1:Polyline)
     ns1:StringItems(Item: xsd:string[])
     ns1:StringList(xsd:string[])
     ns1:VideoAnalyticsConfiguration(ns1:VideoAnalyticsConfiguration)
     ns1:VideoEncoderConfiguration(ns1:VideoEncoderConfiguration)
     ns1:VideoSourceConfiguration(ns1:VideoSourceConfiguration)
     
     ns3:Body(ns3:Body)
     ns3:Envelope(ns3:Envelope)
     ns3:Fault(ns3:Fault)
     ns3:Header(ns3:Header)
     ns3:NotUnderstood(ns3:NotUnderstoodType)
     ns3:Upgrade(ns3:UpgradeType)
     ns9:Include(ns9:Include)
     ns6:Action(ns6:AttributedURIType)
     ns6:EndpointReference(ns6:EndpointReferenceType)
     ns6:FaultTo(ns6:EndpointReferenceType)
     ns6:From(ns6:EndpointReferenceType)
     ns6:MessageID(ns6:AttributedURIType)
     ns6:Metadata(ns6:MetadataType)
     ns6:ProblemAction(ns6:ProblemActionType)
     ns6:ProblemHeader(ns6:AttributedAnyType)
     ns6:ProblemHeaderQName(ns6:AttributedQNameType)
     ns6:ProblemIRI(ns6:AttributedURIType)
     ns6:RelatesTo(ns6:RelatesToType)
     ns6:ReplyTo(ns6:EndpointReferenceType)
     ns6:RetryAfter(ns6:AttributedUnsignedLongType)
     ns6:To(ns6:AttributedURIType)

Global types:
     xsd:anyType
     ns5:FilterType(_value_1: ANY[])
     ns5:InvalidFilterFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, UnknownFilter: xsd:QName[], _attr_1: {})
     ns5:InvalidMessageContentExpressionFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:InvalidProducerPropertiesExpressionFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:InvalidTopicExpressionFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:MultipleTopicsSpecifiedFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:NoCurrentMessageOnTopicFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:NotificationMessageHolderType(SubscriptionReference: ns6:EndpointReferenceType, Topic: ns5:TopicExpressionType, ProducerReference: ns6:EndpointReferenceType, Message: {_value_1: ANY})
     ns5:NotifyMessageNotSupportedFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:PauseFailedFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:QueryExpressionType(_value_1: ANY, Dialect: xsd:anyURI)
     ns5:ResumeFailedFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:SubscribeCreationFailedFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:SubscriptionPolicyType(_value_1: ANY[])
     ns5:TopicExpressionDialectUnknownFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:TopicExpressionType(_value_1: ANY, Dialect: xsd:anyURI, _attr_1: {})
     ns5:TopicNotSupportedFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:UnableToCreatePullPointFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:UnableToDestroyPullPointFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:UnableToDestroySubscriptionFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:UnableToGetMessagesFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns5:UnacceptableInitialTerminationTimeFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, MinimumTime: xsd:dateTime, MaximumTime: xsd:dateTime, _attr_1: {})
     ns5:UnacceptableTerminationTimeFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, MinimumTime: xsd:dateTime, MaximumTime: xsd:dateTime, _attr_1: {})
     ns5:UnrecognizedPolicyRequestFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, UnrecognizedPolicy: xsd:QName[], _attr_1: {})
     ns5:UnsupportedPolicyRequestFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, UnsupportedPolicy: xsd:QName[], _attr_1: {})
     ns8:ConcreteTopicExpression
     ns8:Documentation(_value_1: ANY[])
     ns8:ExtensibleDocumented(documentation: ns8:Documentation, _attr_1: {})
     ns8:FullTopicExpression
     ns8:QueryExpressionType(_value_1: ANY, Dialect: xsd:anyURI)
     ns8:SimpleTopicExpression
     ns8:TopicNamespaceType(documentation: ns8:Documentation, Topic: {documentation: ns8:Documentation, MessagePattern: ns8:QueryExpressionType, Topic: ns8:TopicType[], _value_1: ANY[], _attr_1: {}, name: xsd:NCName, messageTypes: xsd:QName[], final: xsd:boolean, parent: ns8:ConcreteTopicExpression}[], _value_1: ANY[], _attr_1: {}, name: xsd:NCName, targetNamespace: xsd:anyURI, final: xsd:boolean)
     ns8:TopicSetType(documentation: ns8:Documentation, _value_1: ANY[], _attr_1: {})
     ns8:TopicType(documentation: ns8:Documentation, MessagePattern: ns8:QueryExpressionType, Topic: ns8:TopicType[], _value_1: ANY[], _attr_1: {}, name: xsd:NCName, messageTypes: xsd:QName[], final: xsd:boolean)
     ns7:BaseFaultType(_value_1: ANY[], Timestamp: xsd:dateTime, Originator: ns6:EndpointReferenceType, ErrorCode: {}, Description: {xsd:string, lang: }[], FaultCause: {_value_1: ANY}, _attr_1: {})
     ns0:AutoGeoModes
     ns0:DeviceServiceCapabilities(Network: ns0:NetworkCapabilities, Security: ns0:SecurityCapabilities, System: ns0:SystemCapabilities, Misc: ns0:MiscCapabilities)
     ns0:MiscCapabilities(AuxiliaryCommands: xsd:string[], _attr_1: {})
     ns0:NetworkCapabilities(IPFilter: xsd:boolean, ZeroConfiguration: xsd:boolean, IPVersion6: xsd:boolean, DynDNS: xsd:boolean, Dot11Configuration: xsd:boolean, Dot1XConfigurations: xsd:int, HostnameFromDHCP: xsd:boolean, NTP: xsd:int, DHCPv6: xsd:boolean, _attr_1: {})
     ns0:SecurityCapabilities(TLS1.0: xsd:boolean, TLS1.1: xsd:boolean, TLS1.2: xsd:boolean, OnboardKeyGeneration: xsd:boolean, AccessPolicyConfig: xsd:boolean, DefaultAccessPolicy: xsd:boolean, Dot1X: xsd:boolean, RemoteUserHandling: xsd:boolean, X.509Token: xsd:boolean, SAMLToken: xsd:boolean, KerberosToken: xsd:boolean, UsernameToken: xsd:boolean, HttpDigest: xsd:boolean, RELToken: xsd:boolean, JsonWebToken: xsd:boolean, SupportedEAPMethods: xsd:int[], MaxUsers: xsd:int, MaxUserNameLength: xsd:int, MaxPasswordLength: xsd:int, SecurityPolicies: xsd:string[], MaxPasswordHistory: xsd:int, HashingAlgorithms: xsd:string[], _attr_1: {})
     ns0:Service(Namespace: xsd:anyURI, XAddr: xsd:anyURI, Capabilities: {_value_1: ANY}, Version: ns1:OnvifVersion, _value_1: ANY[], _attr_1: {})
     ns0:StorageConfiguration(Data: ns0:StorageConfigurationData, token: ns1:ReferenceToken)
     ns0:StorageConfigurationData(LocalPath: xsd:anyURI, StorageUri: xsd:anyURI, User: ns0:UserCredential, Extension: {_value_1: ANY[]}, type: xsd:string, Region: xsd:string, _attr_1: {})
     ns0:StorageType
     ns0:SystemCapabilities(DiscoveryResolve: xsd:boolean, DiscoveryBye: xsd:boolean, RemoteDiscovery: xsd:boolean, SystemBackup: xsd:boolean, SystemLogging: xsd:boolean, FirmwareUpgrade: xsd:boolean, HttpFirmwareUpgrade: xsd:boolean, HttpSystemBackup: xsd:boolean, HttpSystemLogging: xsd:boolean, HttpSupportInformation: xsd:boolean, StorageConfiguration: xsd:boolean, MaxStorageConfigurations: xsd:int, GeoLocationEntries: xsd:int, AutoGeo: xsd:string[], StorageTypesSupported: xsd:string[], DiscoveryNotSupported: xsd:boolean, NetworkConfigNotSupported: xsd:boolean, UserConfigNotSupported: xsd:boolean, Addons: xsd:string[], _attr_1: {})
     ns0:UserCredential(UserName: xsd:string, Password: xsd:string, Extension: {_value_1: ANY[]})
     ns1:AACDecOptions(Bitrate: ns1:IntItems, SampleRateRange: ns1:IntItems, _value_1: ANY[], _attr_1: {})
     ns1:AFModes
     ns1:AbsoluteFocus(Position: xsd:float, Speed: xsd:float)
     ns1:AbsoluteFocusOptions(Position: ns1:FloatRange, Speed: ns1:FloatRange)
     ns1:ActionEngineEventPayload(RequestInfo: ns3:Envelope, ResponseInfo: ns3:Envelope, Fault: ns3:Fault, Extension: ns1:ActionEngineEventPayloadExtension, _attr_1: {})
     ns1:ActionEngineEventPayloadExtension(_value_1: ANY[], _attr_1: {})
     ns1:ActiveConnection(CurrentBitrate: xsd:float, CurrentFps: xsd:float, _value_1: ANY[], _attr_1: {})
     ns1:AnalyticsCapabilities(XAddr: xsd:anyURI, RuleSupport: xsd:boolean, AnalyticsModuleSupport: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:AnalyticsDeviceCapabilities(XAddr: xsd:anyURI, RuleSupport: xsd:boolean, Extension: ns1:AnalyticsDeviceExtension, _attr_1: {})
     ns1:AnalyticsDeviceEngineConfiguration(EngineConfiguration: ns1:EngineConfiguration[], Extension: ns1:AnalyticsDeviceEngineConfigurationExtension, _attr_1: {})
     ns1:AnalyticsDeviceEngineConfigurationExtension(_value_1: ANY[])
     ns1:AnalyticsDeviceExtension(_value_1: ANY[])
     ns1:AnalyticsEngine(Name: ns1:Name, UseCount: xsd:int, AnalyticsEngineConfiguration: ns1:AnalyticsDeviceEngineConfiguration, _value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:AnalyticsEngineConfiguration(AnalyticsModule: ns1:Config[], Extension: ns1:AnalyticsEngineConfigurationExtension, _attr_1: {})
     ns1:AnalyticsEngineConfigurationExtension(_value_1: ANY[])
     ns1:AnalyticsEngineControl(Name: ns1:Name, UseCount: xsd:int, EngineToken: ns1:ReferenceToken, EngineConfigToken: ns1:ReferenceToken, InputToken: ns1:ReferenceToken[], ReceiverToken: ns1:ReferenceToken[], Multicast: ns1:MulticastConfiguration, Subscription: ns1:Config, Mode: ns1:ModeOfOperation, _value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:AnalyticsEngineInput(Name: ns1:Name, UseCount: xsd:int, SourceIdentification: ns1:SourceIdentification, VideoInput: ns1:VideoEncoderConfiguration, MetadataInput: ns1:MetadataInput, _value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:AnalyticsEngineInputInfo(InputInfo: ns1:Config, Extension: ns1:AnalyticsEngineInputInfoExtension, _attr_1: {})
     ns1:AnalyticsEngineInputInfoExtension(_value_1: ANY[])
     ns1:AnalyticsState(Error: xsd:string, State: xsd:string, _value_1: ANY[], _attr_1: {})
     ns1:AnalyticsStateInformation(AnalyticsEngineControlToken: ns1:ReferenceToken, State: ns1:AnalyticsState, _value_1: ANY[], _attr_1: {})
     ns1:AnyHolder(_value_1: ANY[], _attr_1: {})
     ns1:ArrayOfFileProgress(FileProgress: ns1:FileProgress[], Extension: ns1:ArrayOfFileProgressExtension, _attr_1: {})
     ns1:ArrayOfFileProgressExtension(_value_1: ANY[], _attr_1: {})
     ns1:AttachmentData(Include: ns9:Include, contentType: ns2:contentType)
     ns1:AudioAttributes(Bitrate: xsd:int, Encoding: xsd:string, Samplerate: xsd:int, _value_1: ANY[], _attr_1: {})
     ns1:AudioClassCandidate(Type: ns1:AudioClassType, Likelihood: xsd:float, _value_1: ANY[], _attr_1: {})
     ns1:AudioClassDescriptor(ClassCandidate: ns1:AudioClassCandidate[], Extension: ns1:AudioClassDescriptorExtension, _attr_1: {})
     ns1:AudioClassDescriptorExtension(_value_1: ANY[], _attr_1: {})
     ns1:AudioClassType
     ns1:AudioClassification
     ns1:AudioDecoderConfiguration(Name: ns1:Name, UseCount: xsd:int, _value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:AudioDecoderConfigurationOptions(AACDecOptions: ns1:AACDecOptions, G711DecOptions: ns1:G711DecOptions, G726DecOptions: ns1:G726DecOptions, Extension: ns1:AudioDecoderConfigurationOptionsExtension, _attr_1: {})
     ns1:AudioDecoderConfigurationOptionsExtension(_value_1: ANY[])
     ns1:AudioEncoder2Configuration(Name: ns1:Name, UseCount: xsd:int, Encoding: xsd:string, Multicast: ns1:MulticastConfiguration, Bitrate: xsd:int, SampleRate: xsd:int, _value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:AudioEncoder2ConfigurationOptions(Encoding: xsd:string, BitrateList: ns1:IntItems, SampleRateList: ns1:IntItems, _value_1: ANY[], _attr_1: {})
     ns1:AudioEncoderConfiguration(Name: ns1:Name, UseCount: xsd:int, Encoding: ns1:AudioEncoding, Bitrate: xsd:int, SampleRate: xsd:int, Multicast: ns1:MulticastConfiguration, SessionTimeout: xsd:duration, _value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:AudioEncoderConfigurationOption(Encoding: ns1:AudioEncoding, BitrateList: ns1:IntItems, SampleRateList: ns1:IntItems, _value_1: ANY[], _attr_1: {})
     ns1:AudioEncoderConfigurationOptions(Options: ns1:AudioEncoderConfigurationOption[], _attr_1: {})
     ns1:AudioEncoding
     ns1:AudioEncodingMimeNames
     ns1:AudioOutput(_value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:AudioOutputConfiguration(Name: ns1:Name, UseCount: xsd:int, OutputToken: ns1:ReferenceToken, SendPrimacy: xsd:anyURI, OutputLevel: xsd:int, _value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:AudioOutputConfigurationOptions(OutputTokensAvailable: ns1:ReferenceToken[], SendPrimacyOptions: xsd:anyURI[], OutputLevelRange: ns1:IntRange, _value_1: ANY[], _attr_1: {})
     ns1:AudioSource(Channels: xsd:int, _value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:AudioSourceConfiguration(Name: ns1:Name, UseCount: xsd:int, SourceToken: ns1:ReferenceToken, _value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:AudioSourceConfigurationOptions(InputTokensAvailable: ns1:ReferenceToken[], Extension: ns1:AudioSourceOptionsExtension, _attr_1: {})
     ns1:AudioSourceOptionsExtension(_value_1: ANY[])
     ns1:AutoFocusMode
     ns1:AuxiliaryData
     ns1:BacklightCompensation(Mode: ns1:BacklightCompensationMode, Level: xsd:float)
     ns1:BacklightCompensation20(Mode: ns1:BacklightCompensationMode, Level: xsd:float)
     ns1:BacklightCompensationMode
     ns1:BacklightCompensationOptions(Mode: ns1:WideDynamicMode[], Level: ns1:FloatRange)
     ns1:BacklightCompensationOptions20(Mode: ns1:BacklightCompensationMode[], Level: ns1:FloatRange)
     ns1:BackupFile(Name: xsd:string, Data: ns1:AttachmentData)
     ns1:BinaryData(Data: xsd:base64Binary, contentType: ns2:contentType)
     ns1:Capabilities(Analytics: ns1:AnalyticsCapabilities, Device: ns1:DeviceCapabilities, Events: ns1:EventCapabilities, Imaging: ns1:ImagingCapabilities, Media: ns1:MediaCapabilities, PTZ: ns1:PTZCapabilities, Extension: ns1:CapabilitiesExtension, _attr_1: {})
     ns1:CapabilitiesExtension(_value_1: ANY[], DeviceIO: ns1:DeviceIOCapabilities, Display: ns1:DisplayCapabilities, Recording: ns1:RecordingCapabilities, Search: ns1:SearchCapabilities, Replay: ns1:ReplayCapabilities, Receiver: ns1:ReceiverCapabilities, AnalyticsDevice: ns1:AnalyticsDeviceCapabilities, Extensions: ns1:CapabilitiesExtension2)
     ns1:CapabilitiesExtension2(_value_1: ANY[])
     ns1:CapabilityCategory
     ns1:CellLayout(Transformation: ns1:Transformation, _value_1: ANY[], Columns: xsd:integer, Rows: xsd:integer, _attr_1: {})
     ns1:Certificate(CertificateID: xsd:token, Certificate: ns1:BinaryData)
     ns1:CertificateGenerationParameters(CertificateID: xsd:token, Subject: xsd:string, ValidNotBefore: xsd:token, ValidNotAfter: xsd:token, Extension: ns1:CertificateGenerationParametersExtension, _attr_1: {})
     ns1:CertificateGenerationParametersExtension(_value_1: ANY[])
     ns1:CertificateInformation(CertificateID: xsd:token, IssuerDN: xsd:string, SubjectDN: xsd:string, KeyUsage: ns1:CertificateUsage, ExtendedKeyUsage: ns1:CertificateUsage, KeyLength: xsd:int, Version: xsd:string, SerialNum: xsd:string, SignatureAlgorithm: xsd:string, Validity: ns1:DateTimeRange, Extension: ns1:CertificateInformationExtension, _attr_1: {})
     ns1:CertificateInformationExtension(_value_1: ANY[])
     ns1:CertificateStatus(CertificateID: xsd:token, Status: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:CertificateUsage(xsd:string, Critical: xsd:boolean)
     ns1:CertificateWithPrivateKey(CertificateID: xsd:token, Certificate: ns1:BinaryData, PrivateKey: ns1:BinaryData, _value_1: ANY[], _attr_1: {})
     ns1:CodingCapabilities(AudioEncodingCapabilities: ns1:AudioEncoderConfigurationOptions, AudioDecodingCapabilities: ns1:AudioDecoderConfigurationOptions, VideoDecodingCapabilities: ns1:VideoDecoderConfigurationOptions, _value_1: ANY[], _attr_1: {})
     ns1:Color(X: xsd:float, Y: xsd:float, Z: xsd:float, Colorspace: xsd:anyURI, Likelihood: xsd:float, _attr_1: {})
     ns1:ColorCovariance(XX: xsd:float, YY: xsd:float, ZZ: xsd:float, XY: xsd:float, XZ: xsd:float, YZ: xsd:float, Colorspace: xsd:anyURI, _attr_1: {})
     ns1:ColorDescriptor(ColorCluster: {Color: ns1:Color, Weight: xsd:float, Covariance: ns1:ColorCovariance, _value_1: ANY[], _attr_1: {}}[], Extension: None, _value_1: ANY[], _attr_1: {})
     ns1:ColorOptions(({ColorList: ns1:Color[]} | {ColorspaceRange: ns1:ColorspaceRange[]}), _attr_1: {})
     ns1:ColorspaceRange(X: ns1:FloatRange, Y: ns1:FloatRange, Z: ns1:FloatRange, Colorspace: xsd:anyURI, _attr_1: {})
     ns1:Config(Parameters: ns1:ItemList, Name: xsd:string, Type: xsd:QName)
     ns1:ConfigDescription(Parameters: ns1:ItemListDescription, Messages: {Source: ns1:ItemListDescription, Key: ns1:ItemListDescription, Data: ns1:ItemListDescription, Extension: ns1:MessageDescriptionExtension, ParentTopic: xsd:string, IsProperty: xsd:boolean, _attr_1: {}}[], Extension: ns1:ConfigDescriptionExtension, Name: xsd:QName, fixed: xsd:boolean, maxInstances: xsd:integer, _attr_1: {})
     ns1:ConfigDescriptionExtension(_value_1: ANY[])
     ns1:ConfigurationEntity(Name: ns1:Name, UseCount: xsd:int, token: ns1:ReferenceToken)
     ns1:ContinuousFocus(Speed: xsd:float)
     ns1:ContinuousFocusOptions(Speed: ns1:FloatRange)
     ns1:DNSInformation(FromDHCP: xsd:boolean, SearchDomain: xsd:token[], DNSFromDHCP: ns1:IPAddress[], DNSManual: ns1:IPAddress[], Extension: ns1:DNSInformationExtension, _attr_1: {})
     ns1:DNSInformationExtension(_value_1: ANY[])
     ns1:DNSName
     ns1:Date(Year: xsd:int, Month: xsd:int, Day: xsd:int)
     ns1:DateTime(Time: ns1:Time, Date: ns1:Date)
     ns1:DateTimeRange(From: xsd:dateTime, Until: xsd:dateTime, _value_1: ANY[], _attr_1: {})
     ns1:Defogging(Mode: xsd:string, Level: xsd:float, Extension: ns1:DefoggingExtension, _attr_1: {})
     ns1:DefoggingExtension(_value_1: ANY[])
     ns1:DefoggingMode
     ns1:DefoggingOptions(Mode: xsd:string[], Level: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:Description
     ns1:DeviceCapabilities(XAddr: xsd:anyURI, Network: ns1:NetworkCapabilities, System: ns1:SystemCapabilities, IO: ns1:IOCapabilities, Security: ns1:SecurityCapabilities, Extension: ns1:DeviceCapabilitiesExtension, _attr_1: {})
     ns1:DeviceCapabilitiesExtension(_value_1: ANY[])
     ns1:DeviceEntity(token: ns1:ReferenceToken)
     ns1:DeviceIOCapabilities(XAddr: xsd:anyURI, VideoSources: xsd:int, VideoOutputs: xsd:int, AudioSources: xsd:int, AudioOutputs: xsd:int, RelayOutputs: xsd:int, _value_1: ANY[], _attr_1: {})
     ns1:DigitalIdleState
     ns1:DigitalInput(_value_1: ANY[], token: ns1:ReferenceToken, IdleState: ns1:DigitalIdleState, _attr_1: {})
     ns1:Direction
     ns1:DiscoveryMode
     ns1:DisplayCapabilities(XAddr: xsd:anyURI, FixedLayout: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:Domain
     ns1:Dot11AuthAndMangementSuite
     ns1:Dot11AvailableNetworks(SSID: ns1:Dot11SSIDType, BSSID: xsd:string, AuthAndMangementSuite: ns1:Dot11AuthAndMangementSuite[], PairCipher: ns1:Dot11Cipher[], GroupCipher: ns1:Dot11Cipher[], SignalStrength: ns1:Dot11SignalStrength, Extension: ns1:Dot11AvailableNetworksExtension, _attr_1: {})
     ns1:Dot11AvailableNetworksExtension(_value_1: ANY[])
     ns1:Dot11Capabilities(TKIP: xsd:boolean, ScanAvailableNetworks: xsd:boolean, MultipleConfiguration: xsd:boolean, AdHocStationMode: xsd:boolean, WEP: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:Dot11Cipher
     ns1:Dot11Configuration(SSID: ns1:Dot11SSIDType, Mode: ns1:Dot11StationMode, Alias: ns1:Name, Priority: ns1:NetworkInterfaceConfigPriority, Security: ns1:Dot11SecurityConfiguration, _value_1: ANY[], _attr_1: {})
     ns1:Dot11PSK
     ns1:Dot11PSKPassphrase
     ns1:Dot11PSKSet(Key: ns1:Dot11PSK, Passphrase: ns1:Dot11PSKPassphrase, Extension: ns1:Dot11PSKSetExtension, _attr_1: {})
     ns1:Dot11PSKSetExtension(_value_1: ANY[])
     ns1:Dot11SSIDType
     ns1:Dot11SecurityConfiguration(Mode: ns1:Dot11SecurityMode, Algorithm: ns1:Dot11Cipher, PSK: ns1:Dot11PSKSet, Dot1X: ns1:ReferenceToken, Extension: ns1:Dot11SecurityConfigurationExtension, _attr_1: {})
     ns1:Dot11SecurityConfigurationExtension(_value_1: ANY[], _attr_1: {})
     ns1:Dot11SecurityMode
     ns1:Dot11SignalStrength
     ns1:Dot11StationMode
     ns1:Dot11Status(SSID: ns1:Dot11SSIDType, BSSID: xsd:string, PairCipher: ns1:Dot11Cipher, GroupCipher: ns1:Dot11Cipher, SignalStrength: ns1:Dot11SignalStrength, ActiveConfigAlias: ns1:ReferenceToken, _value_1: ANY[], _attr_1: {})
     ns1:Dot1XConfiguration(Dot1XConfigurationToken: ns1:ReferenceToken, Identity: xsd:string, AnonymousID: xsd:string, EAPMethod: xsd:int, CACertificateID: xsd:token[], EAPMethodConfiguration: ns1:EAPMethodConfiguration, Extension: ns1:Dot1XConfigurationExtension, _attr_1: {})
     ns1:Dot1XConfigurationExtension(_value_1: ANY[])
     ns1:Dot3Configuration(_value_1: ANY[], _attr_1: {})
     ns1:Duplex
     ns1:DurationRange(Min: xsd:duration, Max: xsd:duration)
     ns1:DynamicDNSInformation(Type: ns1:DynamicDNSType, Name: ns1:DNSName, TTL: xsd:duration, Extension: ns1:DynamicDNSInformationExtension, _attr_1: {})
     ns1:DynamicDNSInformationExtension(_value_1: ANY[])
     ns1:DynamicDNSType
     ns1:EAPMethodConfiguration(TLSConfiguration: ns1:TLSConfiguration, Password: xsd:string, Extension: ns1:EapMethodExtension, _attr_1: {})
     ns1:EFlip(Mode: ns1:EFlipMode, _value_1: ANY[], _attr_1: {})
     ns1:EFlipMode
     ns1:EFlipOptions(Mode: ns1:EFlipMode[], Extension: ns1:EFlipOptionsExtension, _attr_1: {})
     ns1:EFlipOptionsExtension(_value_1: ANY[])
     ns1:EapMethodExtension(_value_1: ANY[])
     ns1:Enabled
     ns1:EncryptionMode
     ns1:EngineConfiguration(VideoAnalyticsConfiguration: ns1:VideoAnalyticsConfiguration, AnalyticsEngineInputInfo: ns1:AnalyticsEngineInputInfo, _value_1: ANY[], _attr_1: {})
     ns1:Entity
     ns1:EventCapabilities(XAddr: xsd:anyURI, WSSubscriptionPolicySupport: xsd:boolean, WSPullPointSupport: xsd:boolean, WSPausableSubscriptionManagerInterfaceSupport: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:EventFilter(_value_1: ANY[], _attr_1: {})
     ns1:EventSubscription(Filter: ns5:FilterType, SubscriptionPolicy: {_value_1: ANY[]}, _value_1: ANY[], _attr_1: {})
     ns1:Exposure(Mode: ns1:ExposureMode, Priority: ns1:ExposurePriority, Window: ns1:Rectangle, MinExposureTime: xsd:float, MaxExposureTime: xsd:float, MinGain: xsd:float, MaxGain: xsd:float, MinIris: xsd:float, MaxIris: xsd:float, ExposureTime: xsd:float, Gain: xsd:float, Iris: xsd:float)
     ns1:Exposure20(Mode: ns1:ExposureMode, Priority: ns1:ExposurePriority, Window: ns1:Rectangle, MinExposureTime: xsd:float, MaxExposureTime: xsd:float, MinGain: xsd:float, MaxGain: xsd:float, MinIris: xsd:float, MaxIris: xsd:float, ExposureTime: xsd:float, Gain: xsd:float, Iris: xsd:float)
     ns1:ExposureMode
     ns1:ExposureOptions(Mode: ns1:ExposureMode[], Priority: ns1:ExposurePriority[], MinExposureTime: ns1:FloatRange, MaxExposureTime: ns1:FloatRange, MinGain: ns1:FloatRange, MaxGain: ns1:FloatRange, MinIris: ns1:FloatRange, MaxIris: ns1:FloatRange, ExposureTime: ns1:FloatRange, Gain: ns1:FloatRange, Iris: ns1:FloatRange)
     ns1:ExposureOptions20(Mode: ns1:ExposureMode[], Priority: ns1:ExposurePriority[], MinExposureTime: ns1:FloatRange, MaxExposureTime: ns1:FloatRange, MinGain: ns1:FloatRange, MaxGain: ns1:FloatRange, MinIris: ns1:FloatRange, MaxIris: ns1:FloatRange, ExposureTime: ns1:FloatRange, Gain: ns1:FloatRange, Iris: ns1:FloatRange)
     ns1:ExposurePriority
     ns1:FactoryDefaultType
     ns1:FileProgress(FileName: xsd:string, Progress: xsd:float, _value_1: ANY[], _attr_1: {})
     ns1:FindEventResult(RecordingToken: ns1:RecordingReference, TrackToken: ns1:TrackReference, Time: xsd:dateTime, Event: ns5:NotificationMessageHolderType, StartStateEvent: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:FindEventResultList(SearchState: ns1:SearchState, Result: ns1:FindEventResult[])
     ns1:FindMetadataResult(RecordingToken: ns1:RecordingReference, TrackToken: ns1:TrackReference, Time: xsd:dateTime, _value_1: ANY[], _attr_1: {})
     ns1:FindMetadataResultList(SearchState: ns1:SearchState, Result: ns1:FindMetadataResult[])
     ns1:FindPTZPositionResult(RecordingToken: ns1:RecordingReference, TrackToken: ns1:TrackReference, Time: xsd:dateTime, Position: ns1:PTZVector, _value_1: ANY[], _attr_1: {})
     ns1:FindPTZPositionResultList(SearchState: ns1:SearchState, Result: ns1:FindPTZPositionResult[])
     ns1:FindRecordingResultList(SearchState: ns1:SearchState, RecordingInformation: ns1:RecordingInformation[])
     ns1:FloatItems(Items: xsd:float[])
     ns1:FloatRange(Min: xsd:float, Max: xsd:float)
     ns1:FocusConfiguration(AutoFocusMode: ns1:AutoFocusMode, DefaultSpeed: xsd:float, NearLimit: xsd:float, FarLimit: xsd:float, _value_1: ANY[], _attr_1: {})
     ns1:FocusConfiguration20(AutoFocusMode: ns1:AutoFocusMode, DefaultSpeed: xsd:float, NearLimit: xsd:float, FarLimit: xsd:float, Extension: ns1:FocusConfiguration20Extension, AFMode: xsd:string[], _attr_1: {})
     ns1:FocusConfiguration20Extension(_value_1: ANY[])
     ns1:FocusMove(Absolute: ns1:AbsoluteFocus, Relative: ns1:RelativeFocus, Continuous: ns1:ContinuousFocus)
     ns1:FocusOptions(AutoFocusModes: ns1:AutoFocusMode[], DefaultSpeed: ns1:FloatRange, NearLimit: ns1:FloatRange, FarLimit: ns1:FloatRange)
     ns1:FocusOptions20(AutoFocusModes: ns1:AutoFocusMode[], DefaultSpeed: ns1:FloatRange, NearLimit: ns1:FloatRange, FarLimit: ns1:FloatRange, Extension: ns1:FocusOptions20Extension)
     ns1:FocusOptions20Extension(_value_1: ANY[], AFModes: xsd:string[])
     ns1:FocusStatus(Position: xsd:float, MoveStatus: ns1:MoveStatus, Error: xsd:string, _value_1: ANY[], _attr_1: {})
     ns1:FocusStatus20(Position: xsd:float, MoveStatus: ns1:MoveStatus, Error: xsd:string, Extension: ns1:FocusStatus20Extension, _attr_1: {})
     ns1:FocusStatus20Extension(_value_1: ANY[])
     ns1:G711DecOptions(Bitrate: ns1:IntItems, SampleRateRange: ns1:IntItems, _value_1: ANY[], _attr_1: {})
     ns1:G726DecOptions(Bitrate: ns1:IntItems, SampleRateRange: ns1:IntItems, _value_1: ANY[], _attr_1: {})
     ns1:GenericEapPwdConfigurationExtension(_value_1: ANY[])
     ns1:GeoLocation(_value_1: ANY[], lon: xsd:double, lat: xsd:double, elevation: xsd:float, _attr_1: {})
     ns1:GeoOrientation(_value_1: ANY[], roll: xsd:float, pitch: xsd:float, yaw: xsd:float, _attr_1: {})
     ns1:GetRecordingJobsResponseItem(JobToken: ns1:RecordingJobReference, JobConfiguration: ns1:RecordingJobConfiguration, _value_1: ANY[], _attr_1: {})
     ns1:GetRecordingsResponseItem(RecordingToken: ns1:RecordingReference, Configuration: ns1:RecordingConfiguration, Tracks: ns1:GetTracksResponseList, _value_1: ANY[], _attr_1: {})
     ns1:GetTracksResponseItem(TrackToken: ns1:TrackReference, Configuration: ns1:TrackConfiguration, _value_1: ANY[], _attr_1: {})
     ns1:GetTracksResponseList(Track: ns1:GetTracksResponseItem[], _attr_1: {})
     ns1:H264Configuration(GovLength: xsd:int, H264Profile: ns1:H264Profile)
     ns1:H264DecOptions(ResolutionsAvailable: ns1:VideoResolution[], SupportedH264Profiles: ns1:H264Profile[], SupportedInputBitrate: ns1:IntRange, SupportedFrameRate: ns1:IntRange, _value_1: ANY[], _attr_1: {})
     ns1:H264Options(ResolutionsAvailable: ns1:VideoResolution[], GovLengthRange: ns1:IntRange, FrameRateRange: ns1:IntRange, EncodingIntervalRange: ns1:IntRange, H264ProfilesSupported: ns1:H264Profile[])
     ns1:H264Options2(ResolutionsAvailable: ns1:VideoResolution[], GovLengthRange: ns1:IntRange, FrameRateRange: ns1:IntRange, EncodingIntervalRange: ns1:IntRange, H264ProfilesSupported: ns1:H264Profile[], BitrateRange: ns1:IntRange, _value_1: ANY[], _attr_1: {})
     ns1:H264Profile
     ns1:HostnameInformation(FromDHCP: xsd:boolean, Name: xsd:token, Extension: ns1:HostnameInformationExtension, _attr_1: {})
     ns1:HostnameInformationExtension(_value_1: ANY[])
     ns1:HwAddress
     ns1:IANA-IfTypes
     ns1:IOCapabilities(InputConnectors: xsd:int, RelayOutputs: xsd:int, Extension: ns1:IOCapabilitiesExtension, _attr_1: {})
     ns1:IOCapabilitiesExtension(_value_1: ANY[], Auxiliary: xsd:boolean, AuxiliaryCommands: ns1:AuxiliaryData[], Extension: ns1:IOCapabilitiesExtension2, _attr_1: {})
     ns1:IOCapabilitiesExtension2(_value_1: ANY[])
     ns1:IPAddress(Type: ns1:IPType, IPv4Address: ns1:IPv4Address, IPv6Address: ns1:IPv6Address)
     ns1:IPAddressFilter(Type: ns1:IPAddressFilterType, IPv4Address: ns1:PrefixedIPv4Address[], IPv6Address: ns1:PrefixedIPv6Address[], Extension: ns1:IPAddressFilterExtension, _attr_1: {})
     ns1:IPAddressFilterExtension(_value_1: ANY[])
     ns1:IPAddressFilterType
     ns1:IPType
     ns1:IPv4Address
     ns1:IPv4Configuration(Manual: ns1:PrefixedIPv4Address[], LinkLocal: ns1:PrefixedIPv4Address, FromDHCP: ns1:PrefixedIPv4Address, DHCP: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:IPv4NetworkInterface(Enabled: xsd:boolean, Config: ns1:IPv4Configuration)
     ns1:IPv4NetworkInterfaceSetConfiguration(Enabled: xsd:boolean, Manual: ns1:PrefixedIPv4Address[], DHCP: xsd:boolean)
     ns1:IPv6Address
     ns1:IPv6Configuration(AcceptRouterAdvert: xsd:boolean, DHCP: ns1:IPv6DHCPConfiguration, Manual: ns1:PrefixedIPv6Address[], LinkLocal: ns1:PrefixedIPv6Address[], FromDHCP: ns1:PrefixedIPv6Address[], FromRA: ns1:PrefixedIPv6Address[], Extension: ns1:IPv6ConfigurationExtension, _attr_1: {})
     ns1:IPv6ConfigurationExtension(_value_1: ANY[])
     ns1:IPv6DHCPConfiguration
     ns1:IPv6NetworkInterface(Enabled: xsd:boolean, Config: ns1:IPv6Configuration)
     ns1:IPv6NetworkInterfaceSetConfiguration(Enabled: xsd:boolean, AcceptRouterAdvert: xsd:boolean, Manual: ns1:PrefixedIPv6Address[], DHCP: ns1:IPv6DHCPConfiguration)
     ns1:ImageSendingType
     ns1:ImageStabilization(Mode: ns1:ImageStabilizationMode, Level: xsd:float, Extension: ns1:ImageStabilizationExtension, _attr_1: {})
     ns1:ImageStabilizationExtension(_value_1: ANY[])
     ns1:ImageStabilizationMode
     ns1:ImageStabilizationOptions(Mode: ns1:ImageStabilizationMode[], Level: ns1:FloatRange, Extension: ns1:ImageStabilizationOptionsExtension, _attr_1: {})
     ns1:ImageStabilizationOptionsExtension(_value_1: ANY[])
     ns1:ImagingCapabilities(XAddr: xsd:anyURI, _attr_1: {})
     ns1:ImagingOptions(BacklightCompensation: ns1:BacklightCompensationOptions, Brightness: ns1:FloatRange, ColorSaturation: ns1:FloatRange, Contrast: ns1:FloatRange, Exposure: ns1:ExposureOptions, Focus: ns1:FocusOptions, IrCutFilterModes: ns1:IrCutFilterMode[], Sharpness: ns1:FloatRange, WideDynamicRange: ns1:WideDynamicRangeOptions, WhiteBalance: ns1:WhiteBalanceOptions, _value_1: ANY[], _attr_1: {})
     ns1:ImagingOptions20(BacklightCompensation: ns1:BacklightCompensationOptions20, Brightness: ns1:FloatRange, ColorSaturation: ns1:FloatRange, Contrast: ns1:FloatRange, Exposure: ns1:ExposureOptions20, Focus: ns1:FocusOptions20, IrCutFilterModes: ns1:IrCutFilterMode[], Sharpness: ns1:FloatRange, WideDynamicRange: ns1:WideDynamicRangeOptions20, WhiteBalance: ns1:WhiteBalanceOptions20, Extension: ns1:ImagingOptions20Extension, _attr_1: {})
     ns1:ImagingOptions20Extension(_value_1: ANY[], ImageStabilization: ns1:ImageStabilizationOptions, Extension: ns1:ImagingOptions20Extension2)
     ns1:ImagingOptions20Extension2(IrCutFilterAutoAdjustment: ns1:IrCutFilterAutoAdjustmentOptions, Extension: ns1:ImagingOptions20Extension3)
     ns1:ImagingOptions20Extension3(ToneCompensationOptions: ns1:ToneCompensationOptions, DefoggingOptions: ns1:DefoggingOptions, NoiseReductionOptions: ns1:NoiseReductionOptions, Extension: ns1:ImagingOptions20Extension4)
     ns1:ImagingOptions20Extension4(_value_1: ANY[])
     ns1:ImagingSettings(BacklightCompensation: ns1:BacklightCompensation, Brightness: xsd:float, ColorSaturation: xsd:float, Contrast: xsd:float, Exposure: ns1:Exposure, Focus: ns1:FocusConfiguration, IrCutFilter: ns1:IrCutFilterMode, Sharpness: xsd:float, WideDynamicRange: ns1:WideDynamicRange, WhiteBalance: ns1:WhiteBalance, Extension: ns1:ImagingSettingsExtension, _attr_1: {})
     ns1:ImagingSettings20(BacklightCompensation: ns1:BacklightCompensation20, Brightness: xsd:float, ColorSaturation: xsd:float, Contrast: xsd:float, Exposure: ns1:Exposure20, Focus: ns1:FocusConfiguration20, IrCutFilter: ns1:IrCutFilterMode, Sharpness: xsd:float, WideDynamicRange: ns1:WideDynamicRange20, WhiteBalance: ns1:WhiteBalance20, Extension: ns1:ImagingSettingsExtension20, _attr_1: {})
     ns1:ImagingSettingsExtension(_value_1: ANY[])
     ns1:ImagingSettingsExtension20(_value_1: ANY[], ImageStabilization: ns1:ImageStabilization, Extension: ns1:ImagingSettingsExtension202)
     ns1:ImagingSettingsExtension202(IrCutFilterAutoAdjustment: ns1:IrCutFilterAutoAdjustment[], Extension: ns1:ImagingSettingsExtension203)
     ns1:ImagingSettingsExtension203(ToneCompensation: ns1:ToneCompensation, Defogging: ns1:Defogging, NoiseReduction: ns1:NoiseReduction, Extension: ns1:ImagingSettingsExtension204)
     ns1:ImagingSettingsExtension204(_value_1: ANY[])
     ns1:ImagingStatus(FocusStatus: ns1:FocusStatus, _value_1: ANY[], _attr_1: {})
     ns1:ImagingStatus20(FocusStatus20: ns1:FocusStatus20, Extension: ns1:ImagingStatus20Extension, _attr_1: {})
     ns1:ImagingStatus20Extension(_value_1: ANY[])
     ns1:IntItems(Items: xsd:int[])
     ns1:IntRange(Min: xsd:int, Max: xsd:int)
     ns1:IntRectangle(x: xsd:int, y: xsd:int, width: xsd:int, height: xsd:int)
     ns1:IntRectangleRange(XRange: ns1:IntRange, YRange: ns1:IntRange, WidthRange: ns1:IntRange, HeightRange: ns1:IntRange)
     ns1:IrCutFilterAutoAdjustment(BoundaryType: xsd:string, BoundaryOffset: xsd:float, ResponseTime: xsd:duration, Extension: ns1:IrCutFilterAutoAdjustmentExtension, _attr_1: {})
     ns1:IrCutFilterAutoAdjustmentExtension(_value_1: ANY[])
     ns1:IrCutFilterAutoAdjustmentOptions(BoundaryType: xsd:string[], BoundaryOffset: xsd:boolean, ResponseTimeRange: ns1:DurationRange, Extension: ns1:IrCutFilterAutoAdjustmentOptionsExtension, _attr_1: {})
     ns1:IrCutFilterAutoAdjustmentOptionsExtension(_value_1: ANY[])
     ns1:IrCutFilterAutoBoundaryType
     ns1:IrCutFilterMode
     ns1:ItemList(SimpleItem: {Name: xsd:string, Value: xsd:anySimpleType}[], ElementItem: {_value_1: ANY, Name: xsd:string}[], Extension: ns1:ItemListExtension, _attr_1: {})
     ns1:ItemListDescription(SimpleItemDescription: {Name: xsd:string, Type: xsd:QName}[], ElementItemDescription: {Name: xsd:string, Type: xsd:QName}[], Extension: ns1:ItemListDescriptionExtension, _attr_1: {})
     ns1:ItemListDescriptionExtension(_value_1: ANY[])
     ns1:ItemListExtension(_value_1: ANY[])
     ns1:JobToken
     ns1:JpegDecOptions(ResolutionsAvailable: ns1:VideoResolution[], SupportedInputBitrate: ns1:IntRange, SupportedFrameRate: ns1:IntRange, _value_1: ANY[], _attr_1: {})
     ns1:JpegOptions(ResolutionsAvailable: ns1:VideoResolution[], FrameRateRange: ns1:IntRange, EncodingIntervalRange: ns1:IntRange)
     ns1:JpegOptions2(ResolutionsAvailable: ns1:VideoResolution[], FrameRateRange: ns1:IntRange, EncodingIntervalRange: ns1:IntRange, BitrateRange: ns1:IntRange, _value_1: ANY[], _attr_1: {})
     ns1:Layout(PaneLayout: ns1:PaneLayout[], Extension: ns1:LayoutExtension, _attr_1: {})
     ns1:LayoutExtension(_value_1: ANY[])
     ns1:LayoutOptions(PaneLayoutOptions: ns1:PaneLayoutOptions[], Extension: ns1:LayoutOptionsExtension, _attr_1: {})
     ns1:LayoutOptionsExtension(_value_1: ANY[])
     ns1:LensDescription(Offset: ns1:LensOffset, Projection: ns1:LensProjection[], XFactor: xsd:float, _value_1: ANY[], FocalLength: xsd:float, _attr_1: {})
     ns1:LensOffset(x: xsd:float, y: xsd:float, _attr_1: {})
     ns1:LensProjection(Angle: xsd:float, Radius: xsd:float, Transmittance: xsd:float, _value_1: ANY[], _attr_1: {})
     ns1:LocalLocation(_value_1: ANY[], x: xsd:float, y: xsd:float, z: xsd:float, _attr_1: {})
     ns1:LocalOrientation(_value_1: ANY[], pan: xsd:float, tilt: xsd:float, roll: xsd:float, _attr_1: {})
     ns1:LocationEntity(GeoLocation: ns1:GeoLocation, GeoOrientation: ns1:GeoOrientation, LocalLocation: ns1:LocalLocation, LocalOrientation: ns1:LocalOrientation, Entity: xsd:string, Token: ns1:ReferenceToken, Fixed: xsd:boolean, GeoSource: xsd:anyURI, AutoGeo: xsd:boolean)
     ns1:MaximumNumberOfOSDs(Total: xsd:int, Image: xsd:int, PlainText: xsd:int, Date: xsd:int, Time: xsd:int, DateAndTime: xsd:int, _attr_1: {})
     ns1:MediaAttributes(RecordingToken: ns1:RecordingReference, TrackAttributes: ns1:TrackAttributes[], From: xsd:dateTime, Until: xsd:dateTime, _value_1: ANY[], _attr_1: {})
     ns1:MediaCapabilities(XAddr: xsd:anyURI, StreamingCapabilities: ns1:RealTimeStreamingCapabilities, _value_1: ANY[], Extension: ns1:MediaCapabilitiesExtension, _attr_1: {})
     ns1:MediaCapabilitiesExtension(ProfileCapabilities: ns1:ProfileCapabilities, _value_1: ANY[], _attr_1: {})
     ns1:MediaUri(Uri: xsd:anyURI, InvalidAfterConnect: xsd:boolean, InvalidAfterReboot: xsd:boolean, Timeout: xsd:duration, _value_1: ANY[], _attr_1: {})
     ns1:MessageDescription(Source: ns1:ItemListDescription, Key: ns1:ItemListDescription, Data: ns1:ItemListDescription, Extension: ns1:MessageDescriptionExtension, IsProperty: xsd:boolean, _attr_1: {})
     ns1:MessageDescriptionExtension(_value_1: ANY[])
     ns1:MessageExtension(_value_1: ANY[])
     ns1:MetadataAttributes(CanContainPTZ: xsd:boolean, CanContainAnalytics: xsd:boolean, CanContainNotifications: xsd:boolean, _value_1: ANY[], PtzSpaces: xsd:string[], _attr_1: {})
     ns1:MetadataCompressionType
     ns1:MetadataConfiguration(Name: ns1:Name, UseCount: xsd:int, PTZStatus: ns1:PTZFilter, Events: ns1:EventSubscription, Analytics: xsd:boolean, Multicast: ns1:MulticastConfiguration, SessionTimeout: xsd:duration, _value_1: ANY[], AnalyticsEngineConfiguration: ns1:AnalyticsEngineConfiguration, Extension: ns1:MetadataConfigurationExtension, token: ns1:ReferenceToken, CompressionType: xsd:string, GeoLocation: xsd:boolean, ShapePolygon: xsd:boolean, _attr_1: {})
     ns1:MetadataConfigurationExtension(_value_1: ANY[])
     ns1:MetadataConfigurationOptions(PTZStatusFilterOptions: ns1:PTZStatusFilterOptions, _value_1: ANY[], Extension: ns1:MetadataConfigurationOptionsExtension, GeoLocation: xsd:boolean, MaxContentFilterSize: xsd:int, _attr_1: {})
     ns1:MetadataConfigurationOptionsExtension(CompressionType: xsd:string[], Extension: ns1:MetadataConfigurationOptionsExtension2)
     ns1:MetadataConfigurationOptionsExtension2(_value_1: ANY[])
     ns1:MetadataFilter(MetadataStreamFilter: ns1:XPathExpression, _value_1: ANY[], _attr_1: {})
     ns1:MetadataInput(MetadataConfig: ns1:Config[], Extension: ns1:MetadataInputExtension, _attr_1: {})
     ns1:MetadataInputExtension(_value_1: ANY[])
     ns1:ModeOfOperation
     ns1:MotionExpression(Expression: xsd:string, _value_1: ANY[], Type: xsd:string, _attr_1: {})
     ns1:MotionExpressionConfiguration(MotionExpression: ns1:MotionExpression, _value_1: ANY[], _attr_1: {})
     ns1:MoveAndTrackMethod
     ns1:MoveOptions(Absolute: ns1:AbsoluteFocusOptions, Relative: ns1:RelativeFocusOptions, Continuous: ns1:ContinuousFocusOptions)
     ns1:MoveOptions20(Absolute: ns1:AbsoluteFocusOptions, Relative: ns1:RelativeFocusOptions20, Continuous: ns1:ContinuousFocusOptions)
     ns1:MoveStatus
     ns1:Mpeg4Configuration(GovLength: xsd:int, Mpeg4Profile: ns1:Mpeg4Profile)
     ns1:Mpeg4DecOptions(ResolutionsAvailable: ns1:VideoResolution[], SupportedMpeg4Profiles: ns1:Mpeg4Profile[], SupportedInputBitrate: ns1:IntRange, SupportedFrameRate: ns1:IntRange, _value_1: ANY[], _attr_1: {})
     ns1:Mpeg4Options(ResolutionsAvailable: ns1:VideoResolution[], GovLengthRange: ns1:IntRange, FrameRateRange: ns1:IntRange, EncodingIntervalRange: ns1:IntRange, Mpeg4ProfilesSupported: ns1:Mpeg4Profile[])
     ns1:Mpeg4Options2(ResolutionsAvailable: ns1:VideoResolution[], GovLengthRange: ns1:IntRange, FrameRateRange: ns1:IntRange, EncodingIntervalRange: ns1:IntRange, Mpeg4ProfilesSupported: ns1:Mpeg4Profile[], BitrateRange: ns1:IntRange, _value_1: ANY[], _attr_1: {})
     ns1:Mpeg4Profile
     ns1:MulticastConfiguration(Address: ns1:IPAddress, Port: xsd:int, TTL: xsd:int, AutoStart: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:NTPInformation(FromDHCP: xsd:boolean, NTPFromDHCP: ns1:NetworkHost[], NTPManual: ns1:NetworkHost[], Extension: ns1:NTPInformationExtension, _attr_1: {})
     ns1:NTPInformationExtension(_value_1: ANY[])
     ns1:Name
     ns1:NetworkCapabilities(IPFilter: xsd:boolean, ZeroConfiguration: xsd:boolean, IPVersion6: xsd:boolean, DynDNS: xsd:boolean, Extension: ns1:NetworkCapabilitiesExtension, _attr_1: {})
     ns1:NetworkCapabilitiesExtension(_value_1: ANY[], Dot11Configuration: xsd:boolean, Extension: ns1:NetworkCapabilitiesExtension2)
     ns1:NetworkCapabilitiesExtension2(_value_1: ANY[])
     ns1:NetworkGateway(IPv4Address: ns1:IPv4Address[], IPv6Address: ns1:IPv6Address[])
     ns1:NetworkHost(Type: ns1:NetworkHostType, IPv4Address: ns1:IPv4Address, IPv6Address: ns1:IPv6Address, DNSname: ns1:DNSName, Extension: ns1:NetworkHostExtension, _attr_1: {})
     ns1:NetworkHostExtension(_value_1: ANY[])
     ns1:NetworkHostType
     ns1:NetworkInterface(Enabled: xsd:boolean, Info: ns1:NetworkInterfaceInfo, Link: ns1:NetworkInterfaceLink, IPv4: ns1:IPv4NetworkInterface, IPv6: ns1:IPv6NetworkInterface, Extension: ns1:NetworkInterfaceExtension, token: ns1:ReferenceToken, _attr_1: {})
     ns1:NetworkInterfaceConfigPriority
     ns1:NetworkInterfaceConnectionSetting(AutoNegotiation: xsd:boolean, Speed: xsd:int, Duplex: ns1:Duplex)
     ns1:NetworkInterfaceExtension(_value_1: ANY[], InterfaceType: ns1:IANA-IfTypes, Dot3: ns1:Dot3Configuration[], Dot11: ns1:Dot11Configuration[], Extension: ns1:NetworkInterfaceExtension2)
     ns1:NetworkInterfaceExtension2(_value_1: ANY[])
     ns1:NetworkInterfaceInfo(Name: xsd:string, HwAddress: ns1:HwAddress, MTU: xsd:int)
     ns1:NetworkInterfaceLink(AdminSettings: ns1:NetworkInterfaceConnectionSetting, OperSettings: ns1:NetworkInterfaceConnectionSetting, InterfaceType: ns1:IANA-IfTypes)
     ns1:NetworkInterfaceSetConfiguration(Enabled: xsd:boolean, Link: ns1:NetworkInterfaceConnectionSetting, MTU: xsd:int, IPv4: ns1:IPv4NetworkInterfaceSetConfiguration, IPv6: ns1:IPv6NetworkInterfaceSetConfiguration, Extension: ns1:NetworkInterfaceSetConfigurationExtension, _attr_1: {})
     ns1:NetworkInterfaceSetConfigurationExtension(_value_1: ANY[], Dot3: ns1:Dot3Configuration[], Dot11: ns1:Dot11Configuration[], Extension: ns1:NetworkInterfaceSetConfigurationExtension2)
     ns1:NetworkInterfaceSetConfigurationExtension2(_value_1: ANY[])
     ns1:NetworkProtocol(Name: ns1:NetworkProtocolType, Enabled: xsd:boolean, Port: xsd:int[], Extension: ns1:NetworkProtocolExtension, _attr_1: {})
     ns1:NetworkProtocolExtension(_value_1: ANY[])
     ns1:NetworkProtocolType
     ns1:NetworkZeroConfiguration(InterfaceToken: ns1:ReferenceToken, Enabled: xsd:boolean, Addresses: ns1:IPv4Address[], Extension: ns1:NetworkZeroConfigurationExtension, _attr_1: {})
     ns1:NetworkZeroConfigurationExtension(_value_1: ANY[], Additional: ns1:NetworkZeroConfiguration[], Extension: ns1:NetworkZeroConfigurationExtension2)
     ns1:NetworkZeroConfigurationExtension2(_value_1: ANY[])
     ns1:NoiseReduction(Level: xsd:float, _value_1: ANY[], _attr_1: {})
     ns1:NoiseReductionOptions(Level: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:OSDColor(Color: ns1:Color, Transparent: xsd:int, _attr_1: {})
     ns1:OSDColorOptions(Color: ns1:ColorOptions, Transparent: ns1:IntRange, Extension: ns1:OSDColorOptionsExtension, _attr_1: {})
     ns1:OSDColorOptionsExtension(_value_1: ANY[], _attr_1: {})
     ns1:OSDConfiguration(VideoSourceConfigurationToken: ns1:OSDReference, Type: ns1:OSDType, Position: ns1:OSDPosConfiguration, TextString: ns1:OSDTextConfiguration, Image: ns1:OSDImgConfiguration, Extension: ns1:OSDConfigurationExtension, token: ns1:ReferenceToken, _attr_1: {})
     ns1:OSDConfigurationExtension(_value_1: ANY[], _attr_1: {})
     ns1:OSDConfigurationOptions(MaximumNumberOfOSDs: ns1:MaximumNumberOfOSDs, Type: ns1:OSDType[], PositionOption: xsd:string[], TextOption: ns1:OSDTextOptions, ImageOption: ns1:OSDImgOptions, Extension: ns1:OSDConfigurationOptionsExtension, _attr_1: {})
     ns1:OSDConfigurationOptionsExtension(_value_1: ANY[], _attr_1: {})
     ns1:OSDImgConfiguration(ImgPath: xsd:anyURI, Extension: ns1:OSDImgConfigurationExtension, _attr_1: {})
     ns1:OSDImgConfigurationExtension(_value_1: ANY[], _attr_1: {})
     ns1:OSDImgOptions(ImagePath: xsd:anyURI[], Extension: ns1:OSDImgOptionsExtension, FormatsSupported: xsd:string[], MaxSize: xsd:int, MaxWidth: xsd:int, MaxHeight: xsd:int, _attr_1: {})
     ns1:OSDImgOptionsExtension(_value_1: ANY[], _attr_1: {})
     ns1:OSDPosConfiguration(Type: xsd:string, Pos: ns1:Vector, Extension: ns1:OSDPosConfigurationExtension, _attr_1: {})
     ns1:OSDPosConfigurationExtension(_value_1: ANY[], _attr_1: {})
     ns1:OSDReference(ns1:ReferenceToken, _attr_1: {})
     ns1:OSDTextConfiguration(Type: xsd:string, DateFormat: xsd:string, TimeFormat: xsd:string, FontSize: xsd:int, FontColor: ns1:OSDColor, BackgroundColor: ns1:OSDColor, PlainText: xsd:string, Extension: ns1:OSDTextConfigurationExtension, IsPersistentText: xsd:boolean, _attr_1: {})
     ns1:OSDTextConfigurationExtension(_value_1: ANY[], _attr_1: {})
     ns1:OSDTextOptions(Type: xsd:string[], FontSizeRange: ns1:IntRange, DateFormat: xsd:string[], TimeFormat: xsd:string[], FontColor: ns1:OSDColorOptions, BackgroundColor: ns1:OSDColorOptions, Extension: ns1:OSDTextOptionsExtension, _attr_1: {})
     ns1:OSDTextOptionsExtension(_value_1: ANY[], _attr_1: {})
     ns1:OSDType
     ns1:OnvifVersion(Major: xsd:int, Minor: xsd:int)
     ns1:PTControlDirection(EFlip: ns1:EFlip, Reverse: ns1:Reverse, Extension: ns1:PTControlDirectionExtension, _attr_1: {})
     ns1:PTControlDirectionExtension(_value_1: ANY[], _attr_1: {})
     ns1:PTControlDirectionOptions(EFlip: ns1:EFlipOptions, Reverse: ns1:ReverseOptions, Extension: ns1:PTControlDirectionOptionsExtension, _attr_1: {})
     ns1:PTControlDirectionOptionsExtension(_value_1: ANY[])
     ns1:PTZCapabilities(XAddr: xsd:anyURI, _value_1: ANY[], _attr_1: {})
     ns1:PTZConfiguration(Name: ns1:Name, UseCount: xsd:int, NodeToken: ns1:ReferenceToken, DefaultAbsolutePantTiltPositionSpace: xsd:anyURI, DefaultAbsoluteZoomPositionSpace: xsd:anyURI, DefaultRelativePanTiltTranslationSpace: xsd:anyURI, DefaultRelativeZoomTranslationSpace: xsd:anyURI, DefaultContinuousPanTiltVelocitySpace: xsd:anyURI, DefaultContinuousZoomVelocitySpace: xsd:anyURI, DefaultPTZSpeed: ns1:PTZSpeed, DefaultPTZTimeout: xsd:duration, PanTiltLimits: ns1:PanTiltLimits, ZoomLimits: ns1:ZoomLimits, Extension: ns1:PTZConfigurationExtension, token: ns1:ReferenceToken, MoveRamp: xsd:int, PresetRamp: xsd:int, PresetTourRamp: xsd:int, _attr_1: {})
     ns1:PTZConfigurationExtension(_value_1: ANY[], PTControlDirection: ns1:PTControlDirection, Extension: ns1:PTZConfigurationExtension2)
     ns1:PTZConfigurationExtension2(_value_1: ANY[])
     ns1:PTZConfigurationOptions(Spaces: ns1:PTZSpaces, PTZTimeout: ns1:DurationRange, _value_1: ANY[], PTControlDirection: ns1:PTControlDirectionOptions, Extension: ns1:PTZConfigurationOptions2, PTZRamps: xsd:int[], _attr_1: {})
     ns1:PTZConfigurationOptions2(_value_1: ANY[])
     ns1:PTZFilter(Status: xsd:boolean, Position: xsd:boolean, _attr_1: {})
     ns1:PTZMoveStatus(PanTilt: ns1:MoveStatus, Zoom: ns1:MoveStatus)
     ns1:PTZNode(Name: ns1:Name, SupportedPTZSpaces: ns1:PTZSpaces, MaximumNumberOfPresets: xsd:int, HomeSupported: xsd:boolean, AuxiliaryCommands: ns1:AuxiliaryData[], Extension: ns1:PTZNodeExtension, token: ns1:ReferenceToken, FixedHomePosition: xsd:boolean, GeoMove: xsd:boolean, _attr_1: {})
     ns1:PTZNodeExtension(_value_1: ANY[], SupportedPresetTour: ns1:PTZPresetTourSupported, Extension: ns1:PTZNodeExtension2)
     ns1:PTZNodeExtension2(_value_1: ANY[])
     ns1:PTZPositionFilter(MinPosition: ns1:PTZVector, MaxPosition: ns1:PTZVector, EnterOrExit: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:PTZPreset(Name: ns1:Name, PTZPosition: ns1:PTZVector, token: ns1:ReferenceToken, _attr_1: {})
     ns1:PTZPresetTourDirection
     ns1:PTZPresetTourExtension(_value_1: ANY[])
     ns1:PTZPresetTourOperation
     ns1:PTZPresetTourOptions(AutoStart: xsd:boolean, StartingCondition: ns1:PTZPresetTourStartingConditionOptions, TourSpot: ns1:PTZPresetTourSpotOptions, _value_1: ANY[], _attr_1: {})
     ns1:PTZPresetTourPresetDetail(({PresetToken: ns1:ReferenceToken} | {Home: xsd:boolean} | {PTZPosition: ns1:PTZVector} | {TypeExtension: ns1:PTZPresetTourTypeExtension}), _value_1: ANY[], _attr_1: {})
     ns1:PTZPresetTourPresetDetailOptions(PresetToken: ns1:ReferenceToken[], Home: xsd:boolean, PanTiltPositionSpace: ns1:Space2DDescription, ZoomPositionSpace: ns1:Space1DDescription, Extension: ns1:PTZPresetTourPresetDetailOptionsExtension, _attr_1: {})
     ns1:PTZPresetTourPresetDetailOptionsExtension(_value_1: ANY[])
     ns1:PTZPresetTourSpot(PresetDetail: ns1:PTZPresetTourPresetDetail, Speed: ns1:PTZSpeed, StayTime: xsd:duration, Extension: ns1:PTZPresetTourSpotExtension, _attr_1: {})
     ns1:PTZPresetTourSpotExtension(_value_1: ANY[])
     ns1:PTZPresetTourSpotOptions(PresetDetail: ns1:PTZPresetTourPresetDetailOptions, StayTime: ns1:DurationRange, _value_1: ANY[], _attr_1: {})
     ns1:PTZPresetTourStartingCondition(RecurringTime: xsd:int, RecurringDuration: xsd:duration, Direction: ns1:PTZPresetTourDirection, Extension: ns1:PTZPresetTourStartingConditionExtension, RandomPresetOrder: xsd:boolean, _attr_1: {})
     ns1:PTZPresetTourStartingConditionExtension(_value_1: ANY[])
     ns1:PTZPresetTourStartingConditionOptions(RecurringTime: ns1:IntRange, RecurringDuration: ns1:DurationRange, Direction: ns1:PTZPresetTourDirection[], Extension: ns1:PTZPresetTourStartingConditionOptionsExtension, _attr_1: {})
     ns1:PTZPresetTourStartingConditionOptionsExtension(_value_1: ANY[])
     ns1:PTZPresetTourState
     ns1:PTZPresetTourStatus(State: ns1:PTZPresetTourState, CurrentTourSpot: ns1:PTZPresetTourSpot, Extension: ns1:PTZPresetTourStatusExtension, _attr_1: {})
     ns1:PTZPresetTourStatusExtension(_value_1: ANY[])
     ns1:PTZPresetTourSupported(MaximumNumberOfPresetTours: xsd:int, PTZPresetTourOperation: ns1:PTZPresetTourOperation[], Extension: ns1:PTZPresetTourSupportedExtension, _attr_1: {})
     ns1:PTZPresetTourSupportedExtension(_value_1: ANY[])
     ns1:PTZPresetTourTypeExtension(_value_1: ANY[])
     ns1:PTZSpaces(AbsolutePanTiltPositionSpace: ns1:Space2DDescription[], AbsoluteZoomPositionSpace: ns1:Space1DDescription[], RelativePanTiltTranslationSpace: ns1:Space2DDescription[], RelativeZoomTranslationSpace: ns1:Space1DDescription[], ContinuousPanTiltVelocitySpace: ns1:Space2DDescription[], ContinuousZoomVelocitySpace: ns1:Space1DDescription[], PanTiltSpeedSpace: ns1:Space1DDescription[], ZoomSpeedSpace: ns1:Space1DDescription[], Extension: ns1:PTZSpacesExtension, _attr_1: {})
     ns1:PTZSpacesExtension(_value_1: ANY[])
     ns1:PTZSpeed(PanTilt: ns1:Vector2D, Zoom: ns1:Vector1D)
     ns1:PTZStatus(Position: ns1:PTZVector, MoveStatus: ns1:PTZMoveStatus, Error: xsd:string, UtcTime: xsd:dateTime, _value_1: ANY[], _attr_1: {})
     ns1:PTZStatusFilterOptions(PanTiltStatusSupported: xsd:boolean, ZoomStatusSupported: xsd:boolean, _value_1: ANY[], PanTiltPositionSupported: xsd:boolean, ZoomPositionSupported: xsd:boolean, Extension: ns1:PTZStatusFilterOptionsExtension, _attr_1: {})
     ns1:PTZStatusFilterOptionsExtension(_value_1: ANY[])
     ns1:PTZVector(PanTilt: ns1:Vector2D, Zoom: ns1:Vector1D)
     ns1:PanTiltLimits(Range: ns1:Space2DDescription)
     ns1:PaneConfiguration(PaneName: xsd:string, AudioOutputToken: ns1:ReferenceToken, AudioSourceToken: ns1:ReferenceToken, AudioEncoderConfiguration: ns1:AudioEncoderConfiguration, ReceiverToken: ns1:ReferenceToken, Token: ns1:ReferenceToken, _value_1: ANY[], _attr_1: {})
     ns1:PaneLayout(Pane: ns1:ReferenceToken, Area: ns1:Rectangle, _value_1: ANY[], _attr_1: {})
     ns1:PaneLayoutOptions(Area: ns1:Rectangle[], Extension: ns1:PaneOptionExtension, _attr_1: {})
     ns1:PaneOptionExtension(_value_1: ANY[])
     ns1:Polygon(Point: ns1:Vector[])
     ns1:PolygonOptions(RectangleOnly: xsd:boolean, VertexLimits: ns1:IntRange, _value_1: ANY[], _attr_1: {})
     ns1:Polyline(Point: ns1:Vector[])
     ns1:PolylineArray(Segment: ns1:Polyline[], Extension: ns1:PolylineArrayExtension, _attr_1: {})
     ns1:PolylineArrayConfiguration(PolylineArray: ns1:PolylineArray, _value_1: ANY[], _attr_1: {})
     ns1:PolylineArrayExtension(_value_1: ANY[])
     ns1:PrefixedIPv4Address(Address: ns1:IPv4Address, PrefixLength: xsd:int)
     ns1:PrefixedIPv6Address(Address: ns1:IPv6Address, PrefixLength: xsd:int)
     ns1:PresetTour(Name: ns1:Name, Status: ns1:PTZPresetTourStatus, AutoStart: xsd:boolean, StartingCondition: ns1:PTZPresetTourStartingCondition, TourSpot: ns1:PTZPresetTourSpot[], Extension: ns1:PTZPresetTourExtension, token: ns1:ReferenceToken, _attr_1: {})
     ns1:Profile(Name: ns1:Name, VideoSourceConfiguration: ns1:VideoSourceConfiguration, AudioSourceConfiguration: ns1:AudioSourceConfiguration, VideoEncoderConfiguration: ns1:VideoEncoderConfiguration, AudioEncoderConfiguration: ns1:AudioEncoderConfiguration, VideoAnalyticsConfiguration: ns1:VideoAnalyticsConfiguration, PTZConfiguration: ns1:PTZConfiguration, MetadataConfiguration: ns1:MetadataConfiguration, Extension: ns1:ProfileExtension, token: ns1:ReferenceToken, fixed: xsd:boolean, _attr_1: {})
     ns1:ProfileCapabilities(MaximumNumberOfProfiles: xsd:int, _value_1: ANY[], _attr_1: {})
     ns1:ProfileExtension(_value_1: ANY[], AudioOutputConfiguration: ns1:AudioOutputConfiguration, AudioDecoderConfiguration: ns1:AudioDecoderConfiguration, Extension: ns1:ProfileExtension2, _attr_1: {})
     ns1:ProfileExtension2(_value_1: ANY[])
     ns1:ProfileStatus(ActiveConnections: ns1:ActiveConnection[], Extension: ns1:ProfileStatusExtension)
     ns1:ProfileStatusExtension(_value_1: ANY[], _attr_1: {})
     ns1:PropertyOperation
     ns1:RealTimeStreamingCapabilities(RTPMulticast: xsd:boolean, RTP_TCP: xsd:boolean, RTP_RTSP_TCP: xsd:boolean, Extension: ns1:RealTimeStreamingCapabilitiesExtension, _attr_1: {})
     ns1:RealTimeStreamingCapabilitiesExtension(_value_1: ANY[])
     ns1:Receiver(Token: ns1:ReferenceToken, Configuration: ns1:ReceiverConfiguration, _value_1: ANY[], _attr_1: {})
     ns1:ReceiverCapabilities(XAddr: xsd:anyURI, RTP_Multicast: xsd:boolean, RTP_TCP: xsd:boolean, RTP_RTSP_TCP: xsd:boolean, SupportedReceivers: xsd:int, MaximumRTSPURILength: xsd:int, _value_1: ANY[], _attr_1: {})
     ns1:ReceiverConfiguration(Mode: ns1:ReceiverMode, MediaUri: xsd:anyURI, StreamSetup: ns1:StreamSetup, _value_1: ANY[], _attr_1: {})
     ns1:ReceiverMode
     ns1:ReceiverReference
     ns1:ReceiverState
     ns1:ReceiverStateInformation(State: ns1:ReceiverState, AutoCreated: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:RecordingCapabilities(XAddr: xsd:anyURI, ReceiverSource: xsd:boolean, MediaProfileSource: xsd:boolean, DynamicRecordings: xsd:boolean, DynamicTracks: xsd:boolean, MaxStringLength: xsd:int, _value_1: ANY[], _attr_1: {})
     ns1:RecordingConfiguration(Source: ns1:RecordingSourceInformation, Content: ns1:Description, MaximumRetentionTime: xsd:duration, Target: ns1:RecordingTargetConfiguration, _value_1: ANY[], _attr_1: {})
     ns1:RecordingEncryption(KID: xsd:string, Key: xsd:hexBinary, Track: xsd:string[], _value_1: ANY[], Mode: xsd:string, _attr_1: {})
     ns1:RecordingEventFilter(Filter: {Topic: xsd:string, Source: xsd:string, _value_1: ANY[], _attr_1: {}}[], Before: xsd:duration, After: xsd:duration, _value_1: ANY[], _attr_1: {})
     ns1:RecordingInformation(RecordingToken: ns1:RecordingReference, Source: ns1:RecordingSourceInformation, EarliestRecording: xsd:dateTime, LatestRecording: xsd:dateTime, Content: ns1:Description, Track: ns1:TrackInformation[], RecordingStatus: ns1:RecordingStatus, _value_1: ANY[], _attr_1: {})
     ns1:RecordingJobConfiguration(RecordingToken: ns1:RecordingReference, Mode: ns1:RecordingJobMode, Priority: xsd:int, Source: ns1:RecordingJobSource[], Extension: ns1:RecordingJobConfigurationExtension, EventFilter: ns1:RecordingEventFilter, _value_1: ANY[], ScheduleToken: xsd:anyType, _attr_1: {})
     ns1:RecordingJobConfigurationExtension(_value_1: ANY[])
     ns1:RecordingJobMode
     ns1:RecordingJobReference
     ns1:RecordingJobSource(SourceToken: ns1:SourceReference, AutoCreateReceiver: xsd:boolean, Tracks: ns1:RecordingJobTrack[], Extension: ns1:RecordingJobSourceExtension, _attr_1: {})
     ns1:RecordingJobSourceExtension(_value_1: ANY[])
     ns1:RecordingJobState
     ns1:RecordingJobStateInformation(RecordingToken: ns1:RecordingReference, State: ns1:RecordingJobState, Sources: ns1:RecordingJobStateSource[], Extension: ns1:RecordingJobStateInformationExtension, _attr_1: {})
     ns1:RecordingJobStateInformationExtension(_value_1: ANY[])
     ns1:RecordingJobStateSource(SourceToken: ns1:SourceReference, State: ns1:RecordingJobState, Tracks: ns1:RecordingJobStateTracks, _value_1: ANY[], _attr_1: {})
     ns1:RecordingJobStateTrack(SourceTag: xsd:string, Destination: ns1:TrackReference, Error: xsd:string, State: ns1:RecordingJobState, _value_1: ANY[], _attr_1: {})
     ns1:RecordingJobStateTracks(Track: ns1:RecordingJobStateTrack[], _attr_1: {})
     ns1:RecordingJobTrack(SourceTag: xsd:string, Destination: ns1:TrackReference, _value_1: ANY[], _attr_1: {})
     ns1:RecordingReference
     ns1:RecordingSourceInformation(SourceId: xsd:anyURI, Name: ns1:Name, Location: ns1:Description, Description: ns1:Description, Address: xsd:anyURI, _value_1: ANY[], _attr_1: {})
     ns1:RecordingStatus
     ns1:RecordingSummary(DataFrom: xsd:dateTime, DataUntil: xsd:dateTime, NumberRecordings: xsd:int, _value_1: ANY[], _attr_1: {})
     ns1:RecordingTargetConfiguration(Storage: ns1:ReferenceToken, Format: xsd:string, Prefix: xsd:string, Postfix: xsd:string, SpanDuration: xsd:duration, SegmentDuration: xsd:duration, Encryption: ns1:RecordingEncryption[], _value_1: ANY[], _attr_1: {})
     ns1:Rectangle(bottom: xsd:float, top: xsd:float, right: xsd:float, left: xsd:float)
     ns1:ReferenceToken
     ns1:RelativeFocus(Distance: xsd:float, Speed: xsd:float)
     ns1:RelativeFocusOptions(Distance: ns1:FloatRange, Speed: ns1:FloatRange)
     ns1:RelativeFocusOptions20(Distance: ns1:FloatRange, Speed: ns1:FloatRange)
     ns1:RelayIdleState
     ns1:RelayLogicalState
     ns1:RelayMode
     ns1:RelayOutput(Properties: ns1:RelayOutputSettings, _value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:RelayOutputSettings(Mode: ns1:RelayMode, DelayTime: xsd:duration, IdleState: ns1:RelayIdleState)
     ns1:RemoteUser(Username: xsd:string, Password: xsd:string, UseDerivedPassword: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:ReplayCapabilities(XAddr: xsd:anyURI, _value_1: ANY[], _attr_1: {})
     ns1:ReplayConfiguration(SessionTimeout: xsd:duration, _value_1: ANY[], _attr_1: {})
     ns1:Reverse(Mode: ns1:ReverseMode, _value_1: ANY[], _attr_1: {})
     ns1:ReverseMode
     ns1:ReverseOptions(Mode: ns1:ReverseMode[], Extension: ns1:ReverseOptionsExtension, _attr_1: {})
     ns1:ReverseOptionsExtension(_value_1: ANY[])
     ns1:Rotate(Mode: ns1:RotateMode, Degree: xsd:int, Extension: ns1:RotateExtension, _attr_1: {})
     ns1:RotateExtension(_value_1: ANY[])
     ns1:RotateMode
     ns1:RotateOptions(Mode: ns1:RotateMode[], DegreeList: ns1:IntItems, Extension: ns1:RotateOptionsExtension, Reboot: xsd:boolean, _attr_1: {})
     ns1:RotateOptionsExtension(_value_1: ANY[])
     ns1:RuleEngineConfiguration(Rule: ns1:Config[], Extension: ns1:RuleEngineConfigurationExtension, _attr_1: {})
     ns1:RuleEngineConfigurationExtension(_value_1: ANY[])
     ns1:SceneOrientation(Mode: ns1:SceneOrientationMode, Orientation: xsd:string)
     ns1:SceneOrientationMode
     ns1:SceneOrientationOption
     ns1:Scope(ScopeDef: ns1:ScopeDefinition, ScopeItem: xsd:anyURI)
     ns1:ScopeDefinition
     ns1:SearchCapabilities(XAddr: xsd:anyURI, MetadataSearch: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:SearchScope(IncludedSources: ns1:SourceReference[], IncludedRecordings: ns1:RecordingReference[], RecordingInformationFilter: ns1:XPathExpression, Extension: ns1:SearchScopeExtension, _attr_1: {})
     ns1:SearchScopeExtension(_value_1: ANY[])
     ns1:SearchState
     ns1:SecurityCapabilities(TLS1.1: xsd:boolean, TLS1.2: xsd:boolean, OnboardKeyGeneration: xsd:boolean, AccessPolicyConfig: xsd:boolean, X.509Token: xsd:boolean, SAMLToken: xsd:boolean, KerberosToken: xsd:boolean, RELToken: xsd:boolean, _value_1: ANY[], Extension: ns1:SecurityCapabilitiesExtension, _attr_1: {})
     ns1:SecurityCapabilitiesExtension(TLS1.0: xsd:boolean, Extension: ns1:SecurityCapabilitiesExtension2)
     ns1:SecurityCapabilitiesExtension2(Dot1X: xsd:boolean, SupportedEAPMethod: xsd:int[], RemoteUserHandling: xsd:boolean, _value_1: ANY[])
     ns1:SetDateTimeType
     ns1:SourceIdentification(Name: xsd:string, Token: ns1:ReferenceToken[], Extension: ns1:SourceIdentificationExtension, _attr_1: {})
     ns1:SourceIdentificationExtension(_value_1: ANY[])
     ns1:SourceReference(Token: ns1:ReferenceToken, _value_1: ANY[], Type: xsd:anyURI, _attr_1: {})
     ns1:Space1DDescription(URI: xsd:anyURI, XRange: ns1:FloatRange)
     ns1:Space2DDescription(URI: xsd:anyURI, XRange: ns1:FloatRange, YRange: ns1:FloatRange)
     ns1:SphericalCoordinate(_value_1: ANY[], Distance: xsd:float, ElevationAngle: xsd:float, AzimuthAngle: xsd:float)
     ns1:StorageReferencePath(StorageToken: ns1:ReferenceToken, RelativePath: xsd:string, Extension: ns1:StorageReferencePathExtension, _attr_1: {})
     ns1:StorageReferencePathExtension(_value_1: ANY[], _attr_1: {})
     ns1:StreamSetup(Stream: ns1:StreamType, Transport: ns1:Transport, _value_1: ANY[], _attr_1: {})
     ns1:StreamType
     ns1:SupportInformation(Binary: ns1:AttachmentData, String: xsd:string)
     ns1:SupportedAnalyticsModules(AnalyticsModuleContentSchemaLocation: xsd:anyURI[], AnalyticsModuleDescription: ns1:ConfigDescription[], Extension: ns1:SupportedAnalyticsModulesExtension, Limit: xsd:int, _attr_1: {})
     ns1:SupportedAnalyticsModulesExtension(_value_1: ANY[])
     ns1:SupportedRules(RuleContentSchemaLocation: xsd:anyURI[], RuleDescription: ns1:ConfigDescription[], Extension: ns1:SupportedRulesExtension, Limit: xsd:int, _attr_1: {})
     ns1:SupportedRulesExtension(_value_1: ANY[])
     ns1:SystemCapabilities(DiscoveryResolve: xsd:boolean, DiscoveryBye: xsd:boolean, RemoteDiscovery: xsd:boolean, SystemBackup: xsd:boolean, SystemLogging: xsd:boolean, FirmwareUpgrade: xsd:boolean, SupportedVersions: ns1:OnvifVersion[], Extension: ns1:SystemCapabilitiesExtension, _attr_1: {})
     ns1:SystemCapabilitiesExtension(_value_1: ANY[], HttpFirmwareUpgrade: xsd:boolean, HttpSystemBackup: xsd:boolean, HttpSystemLogging: xsd:boolean, HttpSupportInformation: xsd:boolean, Extension: ns1:SystemCapabilitiesExtension2)
     ns1:SystemCapabilitiesExtension2(_value_1: ANY[])
     ns1:SystemDateTime(DateTimeType: ns1:SetDateTimeType, DaylightSavings: xsd:boolean, TimeZone: ns1:TimeZone, UTCDateTime: ns1:DateTime, LocalDateTime: ns1:DateTime, Extension: ns1:SystemDateTimeExtension, _attr_1: {})
     ns1:SystemDateTimeExtension(_value_1: ANY[])
     ns1:SystemLog(Binary: ns1:AttachmentData, String: xsd:string)
     ns1:SystemLogType
     ns1:SystemLogUri(Type: ns1:SystemLogType, Uri: xsd:anyURI, _value_1: ANY[], _attr_1: {})
     ns1:SystemLogUriList(SystemLog: ns1:SystemLogUri[])
     ns1:TLSConfiguration(CertificateID: xsd:token, _value_1: ANY[], _attr_1: {})
     ns1:TargetFormat
     ns1:Time(Hour: xsd:int, Minute: xsd:int, Second: xsd:int)
     ns1:TimeZone(TZ: xsd:token)
     ns1:ToneCompensation(Mode: xsd:string, Level: xsd:float, Extension: ns1:ToneCompensationExtension, _attr_1: {})
     ns1:ToneCompensationExtension(_value_1: ANY[])
     ns1:ToneCompensationMode
     ns1:ToneCompensationOptions(Mode: xsd:string[], Level: xsd:boolean, _value_1: ANY[], _attr_1: {})
     ns1:TrackAttributes(TrackInformation: ns1:TrackInformation, VideoAttributes: ns1:VideoAttributes, AudioAttributes: ns1:AudioAttributes, MetadataAttributes: ns1:MetadataAttributes, Extension: ns1:TrackAttributesExtension, _attr_1: {})
     ns1:TrackAttributesExtension(_value_1: ANY[])
     ns1:TrackConfiguration(TrackType: ns1:TrackType, Description: ns1:Description, _value_1: ANY[], _attr_1: {})
     ns1:TrackInformation(TrackToken: ns1:TrackReference, TrackType: ns1:TrackType, Description: ns1:Description, DataFrom: xsd:dateTime, DataTo: xsd:dateTime, _value_1: ANY[], _attr_1: {})
     ns1:TrackReference
     ns1:TrackType
     ns1:Transformation(Translate: ns1:Vector, Scale: ns1:Vector, Extension: ns1:TransformationExtension, _attr_1: {})
     ns1:TransformationExtension(_value_1: ANY[])
     ns1:Transport(Protocol: ns1:TransportProtocol, Tunnel: ns1:Transport)
     ns1:TransportProtocol
     ns1:User(Username: xsd:string, Password: xsd:string, UserLevel: ns1:UserLevel, Extension: ns1:UserExtension, _attr_1: {})
     ns1:UserExtension(_value_1: ANY[])
     ns1:UserLevel
     ns1:Vector(x: xsd:float, y: xsd:float)
     ns1:Vector1D(x: xsd:float, space: xsd:anyURI)
     ns1:Vector2D(x: xsd:float, y: xsd:float, space: xsd:anyURI)
     ns1:VideoAnalyticsConfiguration(Name: ns1:Name, UseCount: xsd:int, AnalyticsEngineConfiguration: ns1:AnalyticsEngineConfiguration, RuleEngineConfiguration: ns1:RuleEngineConfiguration, _value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:VideoAttributes(Bitrate: xsd:int, Width: xsd:int, Height: xsd:int, Encoding: xsd:string, Framerate: xsd:float, _value_1: ANY[], _attr_1: {})
     ns1:VideoDecoderConfigurationOptions(JpegDecOptions: ns1:JpegDecOptions, H264DecOptions: ns1:H264DecOptions, Mpeg4DecOptions: ns1:Mpeg4DecOptions, Extension: ns1:VideoDecoderConfigurationOptionsExtension, _attr_1: {})
     ns1:VideoDecoderConfigurationOptionsExtension(_value_1: ANY[])
     ns1:VideoEncoder2Configuration(Name: ns1:Name, UseCount: xsd:int, Encoding: xsd:string, Resolution: ns1:VideoResolution2, RateControl: ns1:VideoRateControl2, Multicast: ns1:MulticastConfiguration, Quality: xsd:float, _value_1: ANY[], token: ns1:ReferenceToken, GovLength: xsd:int, AnchorFrameDistance: xsd:int, Profile: xsd:string, GuaranteedFrameRate: xsd:boolean, _attr_1: {})
     ns1:VideoEncoder2ConfigurationOptions(Encoding: xsd:string, QualityRange: ns1:FloatRange, ResolutionsAvailable: ns1:VideoResolution2[], BitrateRange: ns1:IntRange, _value_1: ANY[], GovLengthRange: xsd:int[], MaxAnchorFrameDistance: xsd:int, FrameRatesSupported: xsd:float[], ProfilesSupported: xsd:string[], ConstantBitRateSupported: xsd:boolean, GuaranteedFrameRateSupported: xsd:boolean, _attr_1: {})
     ns1:VideoEncoderConfiguration(Name: ns1:Name, UseCount: xsd:int, Encoding: ns1:VideoEncoding, Resolution: ns1:VideoResolution, Quality: xsd:float, RateControl: ns1:VideoRateControl, MPEG4: ns1:Mpeg4Configuration, H264: ns1:H264Configuration, Multicast: ns1:MulticastConfiguration, SessionTimeout: xsd:duration, _value_1: ANY[], token: ns1:ReferenceToken, GuaranteedFrameRate: xsd:boolean, _attr_1: {})
     ns1:VideoEncoderConfigurationOptions(QualityRange: ns1:IntRange, JPEG: ns1:JpegOptions, MPEG4: ns1:Mpeg4Options, H264: ns1:H264Options, Extension: ns1:VideoEncoderOptionsExtension, GuaranteedFrameRateSupported: xsd:boolean, _attr_1: {})
     ns1:VideoEncoderOptionsExtension(_value_1: ANY[], JPEG: ns1:JpegOptions2, MPEG4: ns1:Mpeg4Options2, H264: ns1:H264Options2, Extension: ns1:VideoEncoderOptionsExtension2)
     ns1:VideoEncoderOptionsExtension2(_value_1: ANY[])
     ns1:VideoEncoding
     ns1:VideoEncodingMimeNames
     ns1:VideoEncodingProfiles
     ns1:VideoOutput(Layout: ns1:Layout, Resolution: ns1:VideoResolution, RefreshRate: xsd:float, AspectRatio: xsd:float, Extension: ns1:VideoOutputExtension, token: ns1:ReferenceToken, _attr_1: {})
     ns1:VideoOutputConfiguration(Name: ns1:Name, UseCount: xsd:int, OutputToken: ns1:ReferenceToken, _value_1: ANY[], token: ns1:ReferenceToken, _attr_1: {})
     ns1:VideoOutputConfigurationOptions(_value_1: ANY[], _attr_1: {})
     ns1:VideoOutputExtension(_value_1: ANY[])
     ns1:VideoRateControl(FrameRateLimit: xsd:int, EncodingInterval: xsd:int, BitrateLimit: xsd:int)
     ns1:VideoRateControl2(FrameRateLimit: xsd:float, BitrateLimit: xsd:int, _value_1: ANY[], ConstantBitRate: xsd:boolean, _attr_1: {})
     ns1:VideoResolution(Width: xsd:int, Height: xsd:int)
     ns1:VideoResolution2(Width: xsd:int, Height: xsd:int, _value_1: ANY[], _attr_1: {})
     ns1:VideoSource(Framerate: xsd:float, Resolution: ns1:VideoResolution, Imaging: ns1:ImagingSettings, Extension: ns1:VideoSourceExtension, token: ns1:ReferenceToken, _attr_1: {})
     ns1:VideoSourceConfiguration(Name: ns1:Name, UseCount: xsd:int, SourceToken: ns1:ReferenceToken, Bounds: ns1:IntRectangle, _value_1: ANY[], Extension: ns1:VideoSourceConfigurationExtension, token: ns1:ReferenceToken, ViewMode: xsd:string, _attr_1: {})
     ns1:VideoSourceConfigurationExtension(Rotate: ns1:Rotate, Extension: ns1:VideoSourceConfigurationExtension2)
     ns1:VideoSourceConfigurationExtension2(LensDescription: ns1:LensDescription[], SceneOrientation: ns1:SceneOrientation, _value_1: ANY[])
     ns1:VideoSourceConfigurationOptions(BoundsRange: ns1:IntRectangleRange, VideoSourceTokensAvailable: ns1:ReferenceToken[], Extension: ns1:VideoSourceConfigurationOptionsExtension, MaximumNumberOfProfiles: xsd:int, _attr_1: {})
     ns1:VideoSourceConfigurationOptionsExtension(_value_1: ANY[], Rotate: ns1:RotateOptions, Extension: ns1:VideoSourceConfigurationOptionsExtension2)
     ns1:VideoSourceConfigurationOptionsExtension2(SceneOrientationMode: ns1:SceneOrientationMode[], _value_1: ANY[])
     ns1:VideoSourceExtension(_value_1: ANY[], Imaging: ns1:ImagingSettings20, Extension: ns1:VideoSourceExtension2)
     ns1:VideoSourceExtension2(_value_1: ANY[])
     ns1:ViewModes
     ns1:WhiteBalance(Mode: ns1:WhiteBalanceMode, CrGain: xsd:float, CbGain: xsd:float, _value_1: ANY[], _attr_1: {})
     ns1:WhiteBalance20(Mode: ns1:WhiteBalanceMode, CrGain: xsd:float, CbGain: xsd:float, Extension: ns1:WhiteBalance20Extension, _attr_1: {})
     ns1:WhiteBalance20Extension(_value_1: ANY[])
     ns1:WhiteBalanceMode
     ns1:WhiteBalanceOptions(Mode: ns1:WhiteBalanceMode[], YrGain: ns1:FloatRange, YbGain: ns1:FloatRange)
     ns1:WhiteBalanceOptions20(Mode: ns1:WhiteBalanceMode[], YrGain: ns1:FloatRange, YbGain: ns1:FloatRange, Extension: ns1:WhiteBalanceOptions20Extension)
     ns1:WhiteBalanceOptions20Extension(_value_1: ANY[])
     ns1:WideDynamicMode
     ns1:WideDynamicRange(Mode: ns1:WideDynamicMode, Level: xsd:float)
     ns1:WideDynamicRange20(Mode: ns1:WideDynamicMode, Level: xsd:float)
     ns1:WideDynamicRangeOptions(Mode: ns1:WideDynamicMode[], Level: ns1:FloatRange)
     ns1:WideDynamicRangeOptions20(Mode: ns1:WideDynamicMode[], Level: ns1:FloatRange)
     ns1:XPathExpression
     ns1:ZoomLimits(Range: ns1:Space1DDescription)
     xsd:ENTITIES
     xsd:ENTITY
     xsd:ID
     xsd:IDREF
     xsd:IDREFS
     xsd:NCName
     xsd:NMTOKEN
     xsd:NMTOKENS
     xsd:NOTATION
     xsd:Name
     xsd:QName
     xsd:anySimpleType
     xsd:anyURI
     xsd:base64Binary
     xsd:boolean
     xsd:byte
     xsd:date
     xsd:dateTime
     xsd:decimal
     xsd:double
     xsd:duration
     xsd:float
     xsd:gDay
     xsd:gMonth
     xsd:gMonthDay
     xsd:gYear
     xsd:gYearMonth
     xsd:hexBinary
     xsd:int
     xsd:integer
     xsd:language
     xsd:long
     xsd:negativeInteger
     xsd:nonNegativeInteger
     xsd:nonPositiveInteger
     xsd:normalizedString
     xsd:positiveInteger
     xsd:short
     xsd:string
     xsd:time
     xsd:token
     xsd:unsignedByte
     xsd:unsignedInt
     xsd:unsignedLong
     xsd:unsignedShort
     ns3:Body(_value_1: ANY[], _attr_1: {})
     ns3:Envelope(Header: ns3:Header, Body: ns3:Body, _attr_1: {})
     ns3:Fault(Code: ns3:faultcode, Reason: ns3:faultreason, Node: xsd:anyURI, Role: xsd:anyURI, Detail: ns3:detail)
     ns3:Header(_value_1: ANY[], _attr_1: {})
     ns3:NotUnderstoodType(qname: xsd:QName)
     ns3:SupportedEnvType(qname: xsd:QName)
     ns3:UpgradeType(SupportedEnvelope: ns3:SupportedEnvType[])
     ns3:detail(_value_1: ANY[], _attr_1: {})
     ns3:faultcode(Value: ns3:faultcodeEnum, Subcode: ns3:subcode)
     ns3:faultcodeEnum
     ns3:faultreason(Text: ns3:reasontext[])
     ns3:reasontext(xsd:string, lang: )
     ns3:subcode(Value: xsd:QName, Subcode: ns3:subcode)
     ns9:Include(_value_1: ANY[], href: xsd:anyURI, _attr_1: {})
     ns2:base64Binary(xsd:base64Binary, contentType: ns2:contentType)
     ns2:hexBinary(xsd:hexBinary, contentType: ns2:contentType)
     ns6:AttributedAnyType(_value_1: ANY, _attr_1: {})
     ns6:AttributedQNameType(xsd:QName, _attr_1: {})
     ns6:AttributedURIType(xsd:anyURI, _attr_1: {})
     ns6:AttributedUnsignedLongType(xsd:unsignedLong, _attr_1: {})
     ns6:EndpointReferenceType(Address: ns6:AttributedURIType, ReferenceParameters: ns6:ReferenceParametersType, Metadata: ns6:MetadataType, _value_1: ANY[], _attr_1: {})
     ns6:FaultCodesType
     ns6:MetadataType(_value_1: ANY[], _attr_1: {})
     ns6:ProblemActionType(Action: ns6:AttributedURIType, SoapAction: xsd:anyURI, _attr_1: {})
     ns6:ReferenceParametersType(_value_1: ANY[], _attr_1: {})
     ns6:RelatesToType(xsd:anyURI, RelationshipType: , _attr_1: {})
     ns6:RelationshipType

Bindings:
     Soap12Binding: {http://www.onvif.org/ver10/device/wsdl}DeviceBinding

